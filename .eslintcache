[{"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\index.js":"1","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\App.js":"2","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\staticStore.js":"4","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\ChartT.js":"5","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\BarT.js":"6","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\InformationTemp.js":"7","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Chart2.js":"8","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\TotalChart.js":"9","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js":"10","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\actions\\staticAction.js":"11","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Circle.js":"12","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\reducerDay.js":"13","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\NewChart.js":"14","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\FusionChart.js":"15","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Time.js":"16","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Fasion2.js":"17","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js":"18","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js":"19"},{"size":517,"mtime":1613380935982,"results":"20","hashOfConfig":"21"},{"size":496,"mtime":1615108603103,"results":"22","hashOfConfig":"21"},{"size":375,"mtime":1613380935982,"results":"23","hashOfConfig":"21"},{"size":422,"mtime":1614590611373,"results":"24","hashOfConfig":"21"},{"size":3212,"mtime":1615201178512,"results":"25","hashOfConfig":"21"},{"size":2955,"mtime":1615114968977,"results":"26","hashOfConfig":"21"},{"size":18069,"mtime":1615202544729,"results":"27","hashOfConfig":"21"},{"size":942,"mtime":1615115764519,"results":"28","hashOfConfig":"21"},{"size":2140,"mtime":1615115241149,"results":"29","hashOfConfig":"21"},{"size":4857,"mtime":1614754200849,"results":"30","hashOfConfig":"21"},{"size":478,"mtime":1613380935966,"results":"31","hashOfConfig":"21"},{"size":4722,"mtime":1614591926457,"results":"32","hashOfConfig":"21"},{"size":3141,"mtime":1614668937714,"results":"33","hashOfConfig":"21"},{"size":2123,"mtime":1614668938316,"results":"34","hashOfConfig":"21"},{"size":2785,"mtime":1614668939645,"results":"35","hashOfConfig":"21"},{"size":1780,"mtime":1614668937871,"results":"36","hashOfConfig":"21"},{"size":1956,"mtime":1614668940577,"results":"37","hashOfConfig":"21"},{"size":4298,"mtime":1614770875854,"results":"38","hashOfConfig":"21"},{"size":346,"mtime":1614669360778,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"vdlxqy",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"42"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"70"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"42"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\index.js",[],["86","87"],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\App.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\staticStore.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\ChartT.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\BarT.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\InformationTemp.js",["88","89","90","91"],"import React, { useState } from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport './InformationTemp.css';\r\n\r\nimport iconFive from '../img/iconFive.png'\r\n\r\nimport iconOne from '../img/iconOne.png'\r\nimport iconTwo from '../img/iconTwo.png';\r\nimport iconThree from '../img/iconThree.png'\r\nimport iconFour from '../img/iconFour.png'\r\nimport { actions } from '../Redux/actions/staticAction'\r\n\r\n\r\n\r\n// -------get new date in correct format to filter data----------------------------------------------------\r\n\r\nlet currentDate = moment().format(\"MM/DD/YYYY\");\r\nlet dateBeforeWeek = moment().subtract(1, 'week').format('MM/DD/YYYY');\r\nlet dateBeforeMonth = moment().subtract(1, 'month').format('MM/DD/YYYY');\r\nlet dateBeforeYear = moment().subtract(1, 'year').format('MM/DD/YYYY')\r\n\r\nlet circleStyle1 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    backgroundColor: \"rgb(247, 181, 0)\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 0\r\n};\r\nlet circleStyle2 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    // position:'absolute',\r\n    backgroundColor: \"rgb(1, 220, 209)\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 0\r\n};\r\nlet circleStyle3 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    // position:'absolute',\r\n    backgroundColor: \"rgb(103, 114, 222)\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 0\r\n};\r\nlet circleStyle4 = {\r\n    padding: 6,\r\n    margin: 6,\r\n    display: \"inline-block\",\r\n    // position:'absolute',\r\n    backgroundColor: \"#ff4560\",\r\n    borderRadius: \"50%\",\r\n    width: 1,\r\n    height: 1,\r\n    left: 0,\r\n    top: 1\r\n};\r\n\r\n// --------------------------------------------------------------------------------------------------------------\r\nconst useStyles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n    paper: {\r\n        borderRadius: '17px',\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n})\r\nexport default withStyles(useStyles)(function Information() {\r\n    const ReducerData = useSelector(state => state.staticDetailsReducer)\r\n    const dispatch = useDispatch()\r\n    const [value, setValue] = useState(\"Day\")\r\n    const [choose,setChoose]=useState(\" \")\r\n\r\n    //  ---filter by: last day,last week,last month,year\r\n    function filterByDay() {\r\n        debugger\r\n        setChoose(\"Day\")\r\n        let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {                const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (dateFormater === currentDate)\r\n\r\n        })\r\n\r\n        let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (detaContact === currentDate)\r\n        })\r\n        let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (dateFormater === currentDate)\r\n        })\r\n\r\n        let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            return (detaPaper === currentDate)\r\n        })\r\n        dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        dispatch(actions.setContactStatic(AllContactData.length))\r\n        dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        dispatch(actions.ClickFilter(1));\r\n\r\n    }\r\n    function filterByYear() {\r\n        let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (new Date(detaContact) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        dispatch(actions.setContactStatic(AllContactData.length))\r\n        dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        dispatch(actions.ClickFilter(1));\r\n\r\n    }\r\n    function filterByWeek() {\r\n        let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n        })\r\n        let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n\r\n        let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n        let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (new Date(detaContact) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n        dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        dispatch(actions.setContactStatic(AllContactData.length))\r\n        dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        dispatch(actions.ClickFilter(1));\r\n    }\r\n    function filterByMonth() {\r\n        let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n        })\r\n        let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n        let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n        let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (new Date(detaContact) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n\r\n        dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        dispatch(actions.setContactStatic(AllContactData.length))\r\n        dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        dispatch(actions.ClickFilter(1));\r\n    }\r\n    return (\r\n        <div className=\"container-fluid mt-5\">\r\n            <div className=\"row pb-5\" style={{ marginRight: '12%', marginLeft: '12%' }} >\r\n                <div className=\"col-3 \" style={{ fontSize: \"18px\",fontFamily: \"system-ui\", fontWeight: \"bold\" ,marginBottom: \"15px\" }}>\r\n                    Leads Information\r\n                </div>\r\n                <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                    <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                    </div></div>‏\r\n             <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className=\"paperOne\" style={{ cursor: 'pointer', padding: 10, borderRadius: '14px', background: '#FFFDFA', border: '2px Solid #F7B500', color: '#F7B500' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Contacts {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\" >\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5>\r\n                                            {ReducerData.leaderStatic.sumContacts ? ReducerData.leaderStatic.sumContacts : \"0\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconOne} style={{ height: '50%' }} alt=\"icon one\" />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px', fontWeight: 'bolder' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className=\"paperTwo\" onClick={() => { window.location.assign('https://papers.dev.leader.codes/admin/ruth109476@gmail.com') }} style={{ padding: 10, background: '#ECFAFA', cursor: 'pointer', border: '2px Solid #01DCD1', color: '#01DCD1', borderRadius: '14px' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Papers {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\" >\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5> {ReducerData.leaderStatic.sumPapers ? ReducerData.leaderStatic.sumPapers : \"0\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconTwo} style={{ height: '50%' }} alt=\"icon one\" />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}  >\r\n                        <Paper className=\"paperThree\" style={{ cursor: 'pointer', padding: 10, background: '#F2F3FF', border: '2px Solid #6772DE', color: '#6772DE', borderRadius: '14px' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Projects {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\">\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5>\r\n                                            {ReducerData.leaderStatic.sumProjects ? ReducerData.leaderStatic.sumProjects : \"0\"}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: ' 0px 0px 20px #00000033' }}>\r\n                                        <img src={iconThree} alt=\"icon three\" />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}  >\r\n                        <Paper className=\"paperFour\" style={{ padding: 10, background: '#fadbe091', border: '2px Solid rgba(255, 69, 96, 0.85)', color: 'rgba(255, 69, 96, 0.85)', borderRadius: '14px', cursor: 'pointer' }}>\r\n                            <div className=\"ml-2 cardFor\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Tasks  {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div class=\" ml-2\">\r\n                                    <div className=\" col-6 ml-2\" >\r\n                                        <h5>{ReducerData.leaderStatic.sumTasks ? ReducerData.leaderStatic.sumTasks : \"0\"}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconFive} alt=\"icon five\" style = {{paddingLeft:'16px',paddingBottom:'6px'}} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div className=\"div-container\">\r\n                <Container className=\"p-0\">\r\n                    <div class=\"container p-0\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-md-6 mb-0 text-time-container\">\r\n                                <Navbar expand=\"md\" variant=\"light\"  className=\"mb-0 d-flex\" style={{ justifyContent: \"flex-start\" }}>\r\n                                    <p onClick={filterByDay} className=\"filterBy\">Day</p>\r\n                                    <p onClick={filterByWeek} className=\"filterBy\">Week</p>\r\n                                    <p onClick={filterByMonth} className=\"filterBy\">Month</p>\r\n                                    <p onClick={filterByYear} className=\"filter\">Year</p>\r\n                                </Navbar>\r\n                            </div>\r\n                            <div class=\"col-md-6 circle-menu-container\">\r\n                                <Navbar expand=\"md\" variant=\"light\" className=\"justify-content-end is-small\">\r\n                                    <p style={circleStyle1}>\r\n                                    </p>\r\n                                    <Navbar.Brand style={{ fontSize: \"14px\" }}>Contacts</Navbar.Brand>\r\n                                    <div style={circleStyle2}>\r\n                                    </div>\r\n                                    <Navbar.Brand style={{ fontSize: \"14px\" }}>Papers</Navbar.Brand>\r\n                                    <div style={circleStyle3}>\r\n                                    </div>\r\n                                    <Navbar.Brand style={{ fontSize: \"14px\" }}>Projects</Navbar.Brand>\r\n                                    <div style={circleStyle4}>\r\n                                    </div>\r\n                                    <Navbar.Brand style={{ fontSize: \"14px\" }}>Tasks</Navbar.Brand>\r\n                                </Navbar>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Container>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n})\r\n\r\n","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Chart2.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\TotalChart.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js",["92","93","94","95","96"],"import { actions } from '../actions/staticAction'\r\n\r\n// ---------------A function that extracts the jwt from the cookies----------------\r\nexport const getCookie = (c_name) => {\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + '=');\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(';', c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return '';\r\n};\r\nexport const getStaticData = ({ dispatch, getState }) => next => action => {\r\n  // with this type client enter to application:INIT_DATA\r\n  if (action.type === 'INIT_DATA') {\r\n    let jwt = getCookie('jwt');\r\n    //  fetch to get sum of projects for user-----------------\r\n    fetch('https://reacthub.dev.leader.codes/api/renana-il/getAllProjectsForUser', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJIZXNJaFlXaVU2Z1A3M1NkMHRXaDJZVzA4ZFkyIiwiZW1haWwiOiJyZW5hbmFAbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjA3NTkxOTI5fQ.U2FQ7I4qBXW9DF-SVJqxKiWgVs5tjSo06pyvmuwzCFU\",\r\n        //    Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        debugger\r\n        //all data for project\r\n        let projectData = data.userProjectsList\r\n        //only sumProject\r\n        debugger\r\n        if (projectData.length != 0) {\r\n          let sumProject = data.countProjectsForUser\r\n          dispatch(actions.setProjectStatic(sumProject));\r\n          dispatch(actions.setProjectData(projectData));\r\n          dispatch(actions.setProjectChart(projectData));\r\n          dispatch(actions.ProjectChartDay(projectData));\r\n          debugger\r\n          console.log(data)\r\n        }\r\n      })\r\n    // fetch to get sum tasks for user-------------\r\n    fetch('https://reacthub.dev.leader.codes/api/renana-il/getAllTasksForUser', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJIZXNJaFlXaVU2Z1A3M1NkMHRXaDJZVzA4ZFkyIiwiZW1haWwiOiJyZW5hbmFAbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjA3NTkxOTI5fQ.U2FQ7I4qBXW9DF-SVJqxKiWgVs5tjSo06pyvmuwzCFU\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        debugger\r\n        //all data for project\r\n        let taskData = data.userTasksList\r\n        //only sumTask\r\n        if (taskData.length != 0) {\r\n          let sumTask = (data.countTasksForUser)\r\n          dispatch(actions.setTaskStatic(sumTask));\r\n          dispatch(actions.setTaskData(taskData));\r\n          dispatch(actions.setTaskChart(taskData));\r\n          console.log(data)\r\n        }\r\n      })\r\n    //  fetch to get sum of papers for user-----------------\r\n    fetch('https://papers.dev.leader.codes/api/ruth109476@gmail.com/getAllQuote', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJEWWMzVlVtRUhTY3FhWkJ3MzAwbHY4OWZuYTgyIiwiZW1haWwiOiJydXRoMTA5NDc2QGdtYWlsLmNvbSIsImlhdCI6MTYxMTcyNjEzN30.sDgXmAvDj3JirPgU5AksbPVMdtxHVIAU9rgTFAeAluE\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        // let sumPapers = (data.quotes.length)\r\n        if (data.quotes.length != 0) {\r\n\r\n          let sumPapers = (data.quotes.length)\r\n          let d = data.quotes\r\n          dispatch(actions.setPaperStatic(sumPapers));\r\n          dispatch(actions.setPaperData(d));\r\n          dispatch(actions.setPaperChart(d));\r\n          console.log(data)\r\n        }\r\n      })\r\n    // fetch to get sum of contacts for user----------------------\r\n    fetch('https://api.dev.leader.codes/blabla101/getContacts/?includesConversations=false', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJzaW1kc01ycmNKZHBRZ3RhOGtnWHlRQmRERnkyIiwiZW1haWwiOiJjdG9AbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjEwNDM3MDcxfQ.vn3nemrfKrW2TKQqwtkIoyaRZRjS8JBEhTtmIWzdc04\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((dataContact) => {\r\n        //all data for contact\r\n        let contactData = dataContact\r\n        //only sumContact\r\n        if (contactData.length != 0) {\r\n\r\n          let sumContact = (dataContact.length)\r\n\r\n          dispatch(actions.setContactStatic(sumContact));\r\n          dispatch(actions.setContactData(contactData));\r\n          dispatch(actions.setContactChart(contactData));\r\n          console.log(contactData)\r\n        }\r\n      })\r\n  }\r\n  return next(action)\r\n}","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\actions\\staticAction.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Circle.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\reducerDay.js",["97","98","99","100","101"],"import produce from 'immer';\r\nimport { createReducer } from \"./reducerUtils\";\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n}\r\n\r\nconst staticData = {\r\n    TaskChartDay(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        console.log(initialState.tasks)\r\n        const arr = [...state.tasks];\r\n        for (let i = 0; i < arr.length; i++) {\r\n\r\n            const date1 = allData[i].startDate.split(\"/\")\r\n            let date2 = date1[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.tasks = [...arr];\r\n        console.log(state.tasks)\r\n    },\r\n    ProjectChartDay(state = initialState, action) {\r\n        debugger\r\n        let allData = action.payload\r\n        const arr = [...state.projects];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            let day = allData[i].dueDate\r\n           let m= moment(day).weekday()\r\n            console.log(moment().isoWeekday())\r\n           let d= moment(day).isoWeekday()\r\n            const date = moment(day); // Thursday Feb 2015\r\n            debugger\r\n            const dow = date.day();\r\n            const x = (arr[dow]) + 1\r\n            arr[dow] = x;\r\n        }\r\n        state.projects = [...arr];\r\n        console.log(state.projects)\r\n    },\r\n    PaperChartDay(state = initialState, action) {\r\n        let allData = action.payload\r\n        console.log(initialState.papers)\r\n        const arr = [...state.papers];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createdDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.papers = [...arr];\r\n    },\r\n    ContactChartDay(state = initialState, action) {\r\n        let allData = action.payload\r\n        console.log(initialState.contacts)\r\n        const arr = [...state.contacts];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createDateAndTime\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.contacts = [...arr];\r\n    },\r\n};\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);",["102","103"],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\NewChart.js",["104"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport default function App(props) {\r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n\r\n    const chart = useRef(null);\r\n\r\n    useLayoutEffect(() => {\r\n        let x = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n\r\n        x.paddingRight = 20;\r\n        //    let data= [\r\n        //         UpdatedData.leaderStatic.sumContacts,\r\n        //         UpdatedData.leaderStatic.sumPapers,\r\n        //         UpdatedData.leaderStatic.sumProjects,\r\n        //         UpdatedData.leaderStatic.sumTasks,\r\n        //     ]\r\n        let data = []\r\n        let visits = 10;\r\n\r\n        for (let i = 1; i < 366; i++) {\r\n            visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n            data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n        }\r\n\r\n        x.data = data;\r\n\r\n        let dateAxis = x.xAxes.push(new am4charts.DateAxis());\r\n        dateAxis.renderer.grid.template.location = 0;\r\n        // let dateAxis =[\"contact\",\"papers\",\"projects\",\"tasks\"]\r\n\r\n        let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\r\n        valueAxis.tooltip.disabled = true;\r\n        valueAxis.renderer.minWidth = 35;\r\n\r\n        let series = x.series.push(new am4charts.LineSeries());\r\n        series.dataFields.dateX = \"date\";\r\n        series.dataFields.valueY = \"value\";\r\n        series.tooltipText = \"{valueY.value}\";\r\n        x.cursor = new am4charts.XYCursor();\r\n\r\n        let scrollbarX = new am4charts.XYChartScrollbar();\r\n        scrollbarX.series.push(series);\r\n        x.scrollbarX = scrollbarX;\r\n\r\n        chart.current = x;\r\n\r\n        return () => {\r\n            x.dispose();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\r\n    );\r\n}\r\n","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\FusionChart.js",["105"],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Time.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Fasion2.js",["106"],"import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport Chart from \"react-apexcharts\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function ApexChart () {\r\n    \r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n        const state = {\r\n\r\n            series: [UpdatedData.leaderStatic.sumContacts,\r\n                UpdatedData.leaderStatic.sumPapers,\r\n                UpdatedData.leaderStatic.sumProjects,\r\n                UpdatedData.leaderStatic.sumTasks],\r\n               \r\n            options: {\r\n                chart: {\r\n                    width: 380,\r\n                    type: 'polarArea'\r\n                },\r\n                labels: ['contacts', 'papers', 'projects ', 'tasks'],\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    width: 1,\r\n                    colors: undefined\r\n                },\r\n                yaxis: {\r\n                    show: false\r\n                },\r\n                legend: {\r\n                    position: 'bottom'\r\n                },\r\n                colors: ['rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgb(253, 81, 219)'],\r\n                \r\n                // plotOptions: {\r\n                //     polarArea: {\r\n                //         rings: {\r\n                //             strokeWidth: 0\r\n                //         }\r\n                //     }\r\n                // },\r\n                // theme: {\r\n                //     monochrome: {\r\n                //         // enabled: true,\r\n                //         // shadeTo: 'light',\r\n                //         // shadeIntensity: 0.6\r\n                //     }\r\n                // }\r\n            },\r\n\r\n\r\n        };\r\n    \r\n\r\n\r\n\r\n   \r\n        return (\r\n\r\n\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={state.options} series={state.series} type=\"polarArea\" width={380} />\r\n            </div>\r\n        )\r\n    }\r\n","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js",["107","108","109","110"],"import produce from 'immer';\r\nimport moment from 'moment';\r\n\r\nimport { createReducer } from \"./reducerUtils\";\r\n\r\n\r\nconst initialState = {\r\n    leaderStatic: { sumProjects: 0, sumTasks: 0, sumPapers: 0, sumContacts: 0 },\r\n    dataStatic: [],\r\n    sumStatic: { viewer: 0, contactOptions: 0, submitioms: 0 },\r\n    AllProject: [],\r\n    AllTask: [],\r\n    AllContact: [],\r\n    AllPapers: [],\r\n    isClicked: 0,\r\n    arrTime:['Day','Week','Month','Year'],\r\n    choose:'Day',\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n};\r\n\r\nconst staticData = {\r\n\r\n    setSumStatic(state, action) {\r\n        state.AllProject = (action.payload);\r\n    },\r\n    setProjectStatic(state, action) {\r\n        state.leaderStatic.sumProjects = action.payload\r\n    },\r\n    setProjectData(state, action) {\r\n        state.AllProject = action.payload\r\n    },\r\n    setTaskStatic(state, action) {\r\n        state.leaderStatic.sumTasks = action.payload\r\n    },\r\n    setTaskData(state, action) {\r\n        state.AllTask = action.payload\r\n    },\r\n    setTaskChart(state = initialState, action) {\r\n        let allData = action.payload    \r\n        const arr = [...state.tasks];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].startDate.split(\"/\")\r\n            let date2 = date1[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.tasks = [...arr];\r\n    },\r\n    setProjectChart(state = initialState, action) {\r\n        debugger\r\n        let allData = action.payload\r\n        const arr = [...state.projects];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].startDate.split(\"/\")\r\n            let date2 = date1[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.projects = [...arr];\r\n    },\r\n    setPaperChart(state = initialState, action) {\r\n        let allData = action.payload\r\n        const arr = [...state.papers];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createdDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.papers = [...arr];\r\n    },\r\n    setContactChart(state = initialState, action) {\r\n        let allData = action.payload\r\n        const arr = [...state.contacts];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createDateAndTime\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.contacts = [...arr];\r\n    },\r\n    setPaperStatic(state, action) {\r\n        state.leaderStatic.sumPapers = action.payload\r\n    },\r\n    setContactStatic(state, action) {\r\n        state.leaderStatic.sumContacts = action.payload\r\n    },\r\n    setContactData(state, action) {\r\n        state.AllContact = action.payload\r\n    }, setPaperData(state, action) {\r\n        state.AllPapers = action.payload\r\n    },\r\n    ClickFilter(state, action) {\r\n        state.isClicked = action.payload\r\n    },\r\n  }\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js",[],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"115","severity":1,"message":"116","line":17,"column":8,"nodeType":"117","messageId":"118","endLine":17,"endColumn":16},{"ruleId":"115","severity":1,"message":"119","line":92,"column":12,"nodeType":"117","messageId":"118","endLine":92,"endColumn":17},{"ruleId":"115","severity":1,"message":"120","line":92,"column":19,"nodeType":"117","messageId":"118","endLine":92,"endColumn":27},{"ruleId":"115","severity":1,"message":"121","line":93,"column":12,"nodeType":"117","messageId":"118","endLine":93,"endColumn":18},{"ruleId":"115","severity":1,"message":"122","line":21,"column":9,"nodeType":"117","messageId":"118","endLine":21,"endColumn":12},{"ruleId":"123","severity":1,"message":"124","line":38,"column":32,"nodeType":"125","messageId":"126","endLine":38,"endColumn":34},{"ruleId":"123","severity":1,"message":"124","line":64,"column":29,"nodeType":"125","messageId":"126","endLine":64,"endColumn":31},{"ruleId":"123","severity":1,"message":"124","line":84,"column":32,"nodeType":"125","messageId":"126","endLine":84,"endColumn":34},{"ruleId":"123","severity":1,"message":"124","line":108,"column":32,"nodeType":"125","messageId":"126","endLine":108,"endColumn":34},{"ruleId":"123","severity":1,"message":"124","line":23,"column":26,"nodeType":"125","messageId":"126","endLine":23,"endColumn":28},{"ruleId":"115","severity":1,"message":"127","line":42,"column":16,"nodeType":"117","messageId":"118","endLine":42,"endColumn":17},{"ruleId":"115","severity":1,"message":"128","line":44,"column":16,"nodeType":"117","messageId":"118","endLine":44,"endColumn":17},{"ruleId":"123","severity":1,"message":"124","line":62,"column":26,"nodeType":"125","messageId":"126","endLine":62,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":82,"column":26,"nodeType":"125","messageId":"126","endLine":82,"endColumn":28},{"ruleId":"111","replacedBy":"129"},{"ruleId":"113","replacedBy":"130"},{"ruleId":"115","severity":1,"message":"131","line":11,"column":11,"nodeType":"117","messageId":"118","endLine":11,"endColumn":22},{"ruleId":"115","severity":1,"message":"132","line":6,"column":8,"nodeType":"117","messageId":"118","endLine":6,"endColumn":15},{"ruleId":"115","severity":1,"message":"133","line":3,"column":8,"nodeType":"117","messageId":"118","endLine":3,"endColumn":13},{"ruleId":"123","severity":1,"message":"124","line":47,"column":26,"nodeType":"125","messageId":"126","endLine":47,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":66,"column":26,"nodeType":"125","messageId":"126","endLine":66,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":85,"column":26,"nodeType":"125","messageId":"126","endLine":85,"endColumn":28},{"ruleId":"123","severity":1,"message":"124","line":104,"column":26,"nodeType":"125","messageId":"126","endLine":104,"endColumn":28},"no-native-reassign",["134"],"no-negated-in-lhs",["135"],"no-unused-vars","'iconFour' is defined but never used.","Identifier","unusedVar","'value' is assigned a value but never used.","'setValue' is assigned a value but never used.","'choose' is assigned a value but never used.","'jwt' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'m' is assigned a value but never used.","'d' is assigned a value but never used.",["134"],["135"],"'UpdatedData' is assigned a value but never used.","'Fasion2' is defined but never used.","'Chart' is defined but never used.","no-global-assign","no-unsafe-negation"]