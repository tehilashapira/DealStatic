[{"C:\\Users\\User\\Videos\\LeaderStatic\\src\\index.js":"1","C:\\Users\\User\\Videos\\LeaderStatic\\src\\App.js":"2","C:\\Users\\User\\Videos\\LeaderStatic\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Videos\\LeaderStatic\\src\\components\\Chart2.js":"4","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\staticStore.js":"5","C:\\Users\\User\\Videos\\LeaderStatic\\src\\components\\InformationTemp.js":"6","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js":"7","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js":"8","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\actions\\staticAction.js":"9","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js":"10"},{"size":517,"mtime":1612820669019,"results":"11","hashOfConfig":"12"},{"size":718,"mtime":1612820669004,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1612820669019,"results":"14","hashOfConfig":"12"},{"size":5336,"mtime":1612864344652,"results":"15","hashOfConfig":"12"},{"size":467,"mtime":1612820669007,"results":"16","hashOfConfig":"12"},{"size":16307,"mtime":1612857251968,"results":"17","hashOfConfig":"12"},{"size":4485,"mtime":1612862500126,"results":"18","hashOfConfig":"12"},{"size":4931,"mtime":1612864160331,"results":"19","hashOfConfig":"12"},{"size":478,"mtime":1612820669005,"results":"20","hashOfConfig":"12"},{"size":1164,"mtime":1612854883020,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9rpw8t",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\User\\Videos\\LeaderStatic\\src\\index.js",[],["44","45"],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\App.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\components\\Chart2.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\staticStore.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\components\\InformationTemp.js",["46","47","48","49","50","51","52","53","54","55"],"import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './InformationTemp.css';\r\nimport { connect } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport iconOne from '../img/iconOne.png'\r\nimport iconTwo from '../img/iconTwo.png';\r\nimport iconThree from '../img/iconThree.png'\r\nimport iconFour from '../img/iconFour.png'\r\nimport { actions } from '../Redux/actions/staticAction'\r\nimport moment from 'moment';\r\nimport { } from 'react-router-dom'\r\n\r\n\r\n// -------get new date in correct format to filter data----------------------------------------------------\r\n\r\nlet currentDate = moment().format(\"MM/DD/YYYY\");\r\nlet dateBeforeWeek = moment().subtract(1, 'week').format('MM/DD/YYYY');\r\nlet dateBeforeMonth = moment().subtract(1, 'month').format('MM/DD/YYYY');\r\nlet dateBeforeYear = moment().subtract(1, 'year').format('MM/DD/YYYY')\r\n// --------------------------------------------------------------------------------------------------------------\r\nconst useStyles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n    paper: {\r\n        borderRadius: '17px',\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n})\r\nfunction Information(props) {\r\n    //  ---filter by: last day,last week,last month,year\r\n    function filterByDay() {\r\n\r\n        let AllTaskData = (props.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (dateFormater == currentDate)\r\n\r\n        })\r\n\r\n        let AllContactData = (props.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (detaContact == currentDate)\r\n        })\r\n        let AllProjectData = (props.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (dateFormater == currentDate)\r\n        })\r\n        debugger\r\n        let AllPapersData = (props.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            return (detaPaper == currentDate)\r\n        })\r\n        props.dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        props.dispatch(actions.setContactStatic(AllContactData.length))\r\n        props.dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        props.dispatch(actions.setPaperStatic(AllPapersData.length));\r\n\r\n    }\r\n    function filterByYear() {\r\n        let AllProjectData = (props.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllPapersData = (props.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllTaskData = (props.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllContactData = (props.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (new Date(detaContact) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        props.dispatch(actions.setContactStatic(AllContactData.length))\r\n        props.dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        props.dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        props.dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        // props.dispatch(actions.setPaperChart(AllPapersData.createdDate));\r\n    }\r\n\r\n    function filterByWeek() {\r\n        let AllProjectData = (props.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n        })\r\n        let AllPapersData = (props.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n\r\n        let AllTaskData = (props.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n        let AllContactData = (props.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (new Date(detaContact) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n        props.dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        props.dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        props.dispatch(actions.setContactStatic(AllContactData.length))\r\n        props.dispatch(actions.setTaskStatic(AllTaskData.length))\r\n    }\r\n    function filterByMonth() {\r\n        let AllProjectData = (props.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n        })\r\n        let AllPapersData = (props.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n        let AllTaskData = (props.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n        let AllContactData = (props.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (new Date(detaContact) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n\r\n        props.dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        props.dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        props.dispatch(actions.setContactStatic(AllContactData.length))\r\n        props.dispatch(actions.setTaskStatic(AllTaskData.length))\r\n    }\r\n    return (\r\n        <div className=\"container-fluid mt-5\">\r\n            <div className=\"row pb-5\" style={{ marginRight: '12%', marginLeft: '12%' }} >\r\n                <div className=\"col-3 \" style={{ fontSize: \"30px\", font: \"normal normal bold 18px/27px Roboto\", marginBottom: \"15px\" }}>\r\n                    leads information\r\n      </div>\r\n                <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                    <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                    </div></div>‏\r\n             <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className=\"paperOne\" style={{ cursor: 'pointer', padding: 10, borderRadius: '14px', background: '#FFFDFA', border: '2px Solid #F7B500', color: '#F7B500' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Contacts {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\" >\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5 style={{ fontWeight: 'bolder' }}>\r\n                                            {props.leaderStatic.sumContacts ? props.leaderStatic.sumContacts : \"0\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconOne} style={{ height: '50%' }} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px', fontWeight: 'bolder' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className=\"paperTwo\" onClick={() => { window.location.assign('https://papers.dev.leader.codes/admin/ruth109476@gmail.com') }} style={{ padding: 10, background: '#ECFAFA', cursor: 'pointer', border: '2px Solid #01DCD1', color: '#01DCD1', borderRadius: '14px' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Papers {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\" >\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5> {props.leaderStatic.sumPapers ? props.leaderStatic.sumPapers : \"0\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconTwo} style={{ height: '50%' }} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}  >\r\n                        <Paper className=\"paperThree\" style={{ cursor: 'pointer', padding: 10, background: '#F2F3FF', border: '2px Solid #6772DE', color: '#6772DE', borderRadius: '14px' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Projects {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\">\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5>\r\n                                            {props.leaderStatic.sumProjects ? props.leaderStatic.sumProjects : \"0\"}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: ' 0px 0px 20px #00000033' }}>\r\n                                        <img src={iconThree} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}  >\r\n                        <Paper className=\"paperFour\" style={{ padding: 10, background: '#FFF5FD', border: '2px Solid #FD51DB', color: '#FD51DB', borderRadius: '14px', cursor: 'pointer' }}>\r\n                            <div className=\"cardFor\" className=\"ml-2 cardFor\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Tasks  {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div class=\" ml-2\">\r\n                                    <div className=\" col-6 ml-2\" >\r\n                                        <h5>{props.leaderStatic.sumTasks ? props.leaderStatic.sumTasks : \"0\"}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconFour} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            {/* ----------------------------filter by: day ,week, month----------------------------------------------------- */}\r\n            <div>\r\n                <div class=\"row\" style={{ direction: \"rtl\", paddingLeft: \"30%\" }}>\r\n                    ‎\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"520px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByYear}>Year</Button>\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"3px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByMonth}>Month</Button>\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"3px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByWeek}>Week</Button>\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"3px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByDay}>Day</Button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dataStatic: state.staticDetailsReducer.dataStatic,\r\n        sumStatic: state.staticDetailsReducer.sumStatic,\r\n        leaderStatic: state.staticDetailsReducer.leaderStatic,\r\n        AllProject: state.staticDetailsReducer.AllProject,\r\n        AllPapers: state.staticDetailsReducer.AllPapers,\r\n        AllTask: state.staticDetailsReducer.AllTask,\r\n        AllContact: state.staticDetailsReducer.AllContact\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(Information));\r\n","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js",["56"],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\actions\\staticAction.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":1,"column":17,"nodeType":"63","messageId":"64","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"66","line":43,"column":34,"nodeType":"67","messageId":"68","endLine":43,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":50,"column":33,"nodeType":"67","messageId":"68","endLine":50,"endColumn":35},{"ruleId":"65","severity":1,"message":"66","line":55,"column":34,"nodeType":"67","messageId":"68","endLine":55,"endColumn":36},{"ruleId":"65","severity":1,"message":"66","line":62,"column":31,"nodeType":"67","messageId":"68","endLine":62,"endColumn":33},{"ruleId":"69","severity":1,"message":"70","line":192,"column":41,"nodeType":"71","endLine":192,"endColumn":88},{"ruleId":"69","severity":1,"message":"70","line":214,"column":41,"nodeType":"71","endLine":214,"endColumn":88},{"ruleId":"69","severity":1,"message":"70","line":237,"column":41,"nodeType":"71","endLine":237,"endColumn":64},{"ruleId":"72","severity":1,"message":"73","line":247,"column":54,"nodeType":"74","endLine":247,"endColumn":78},{"ruleId":"69","severity":1,"message":"70","line":259,"column":41,"nodeType":"71","endLine":259,"endColumn":63},{"ruleId":"61","severity":1,"message":"75","line":21,"column":9,"nodeType":"63","messageId":"64","endLine":21,"endColumn":12},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'jwt' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]