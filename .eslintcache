[{"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\reportWebVitals.js":"2","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\App.js":"3","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\staticStore.js":"4","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\InformationTemp.js":"5","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\middleware\\crudMiddleware.js":"6","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\reducers\\staticDetailsReducer.js":"7","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\actions\\staticAction.js":"8","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\reducers\\reducerUtils.js":"9","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\SpeedometerAppointments.js":"10","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\SpeedometerDeals.js":"11","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\SpeedometerNewContacts.js":"12","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\SpeedometerPresentations.js":"13"},{"size":525,"mtime":1616584011929,"results":"14","hashOfConfig":"15"},{"size":375,"mtime":1615715274736,"results":"16","hashOfConfig":"15"},{"size":403,"mtime":1618398306105,"results":"17","hashOfConfig":"15"},{"size":446,"mtime":1618137511787,"results":"18","hashOfConfig":"15"},{"size":14826,"mtime":1618726032780,"results":"19","hashOfConfig":"15"},{"size":4872,"mtime":1618726983218,"results":"20","hashOfConfig":"15"},{"size":5047,"mtime":1618398377902,"results":"21","hashOfConfig":"15"},{"size":478,"mtime":1615715274725,"results":"22","hashOfConfig":"15"},{"size":346,"mtime":1615715274726,"results":"23","hashOfConfig":"15"},{"size":1067,"mtime":1618399064436,"results":"24","hashOfConfig":"15"},{"size":1521,"mtime":1618397966478,"results":"25","hashOfConfig":"15"},{"size":1071,"mtime":1618400227879,"results":"26","hashOfConfig":"15"},{"size":980,"mtime":1618399139331,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"h9w0s2",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\index.js",[],["58","59"],"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\App.js",[],"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\staticStore.js",[],"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\InformationTemp.js",["60","61","62","63","64","65","66"],"import React, { useState, useEffect } from 'react';\r\nimport moment from 'moment';\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport $ from 'jquery'\r\n\r\nimport './InformationTemp.css';\r\nimport v from '../img/v.png'\r\nimport forms from '../img/forms.png'\r\nimport { actions } from '../Redux/actions/staticAction'\r\nimport SpeedometerAppointments from './SpeedometerAppointments'\r\nimport SpeedometerPresentations from './SpeedometerPresentations'\r\nimport SpeedometerDeals from './SpeedometerDeals'\r\nimport SpeedometerNewContacts from './SpeedometerNewContacts'\r\n\r\n\r\n// --------------------------------------------------------------------------------------------------------------\r\nconst useStyles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n    paper: {\r\n        borderRadius: '17px',\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n})\r\nexport default withStyles(useStyles)(function Information() {\r\n\r\n\r\n    const [input, setInput] = useState(\"text\")\r\n    const [valueGoal1, setValueGoal1] = useState()\r\n    const [valueGoal2, setValueGoal2] = useState()\r\n    const [valueGoal3, setValueGoal3] = useState()\r\n    const [valueGoal4, setValueGoal4] = useState()\r\n\r\n\r\n\r\n    const ReducerData = useSelector(state => state.staticDetailsReducer)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    function CurrentValues(typeNumber, valueGoal) {\r\n\r\n        dispatch(actions.setGoalsServer({ typeNumber, valueGoal }))\r\n        dispatch(actions.setGoalsServer1(valueGoal))\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div style={{ backgroundColor: '#F5F5FA' }}>\r\n                <div>\r\n                    <div className=\"row pb-5\" style={{ marginRight: '12%', marginLeft: '12%' }} >\r\n                        <div className=\"col-3 \" style={{ fontSize: \"18px\", fontFamily: \"system-ui\", fontWeight: \"bold\", marginBottom: \"31px\", marginTop: \"25px\", color: \"black\" }}>\r\n                            Goals Information\r\n                </div>\r\n                        <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                            <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                            </div></div>‚Äè\r\n             <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <Paper className=\"paperOne\" style={{ cursor: 'pointer', padding: 10, borderRadius: '14px', background: 'white', color: '#C1EAF8', height: '100px', width: '240px' }}>\r\n                                    {/* ,border: '2px solid #4BBAFD' */}\r\n                                    <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder', color: \"#000000\" }}>\r\n                                        Total appointments {\" \"}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-between\">\r\n                                        <div className=\"ml-2\" >\r\n                                            <div class=\"col-6 ml-2\">\r\n                                                {/* <h1>{ReducerData.CurrentValuesGoals.appointments}</h1> */}\r\n                                                <h6 style={{ color: \"#000000\", fontSize: \"19px\" }}>\r\n                                                    {ReducerData.GoalsStatic.appointmentsSum\r\n                                                        ? ReducerData.GoalsStatic.appointmentsSum + \"/\" +\r\n                                                        (ReducerData.CurrentValuesGoals.appointmentsSum) : \"0/\" + (ReducerData.CurrentValuesGoals.appointmentsSum)}</h6>\r\n                                                <div className=\"gouge\">\r\n                                                    <SpeedometerAppointments className=\"gouge1\"></SpeedometerAppointments></div>\r\n                                                <div className=\"d-flex flex-row\">\r\n                                                    <div>\r\n                                                        <input onFocus={(e) => e.currentTarget.placeholder = ''}\r\n                                                            onChange={(e) => (setValueGoal1(e.target.value))} className=\"myInput\" placeholder=\"Set Goal\" type=\"number\" value={valueGoal1} style={{ background: \"#4BBAFD\", border: \"1px solid #2FAAF4\", borderRadius: \" 3px\", opacity: \"1\", textAlign: \"center\" }}></input></div>\r\n                                                    <div>\r\n                                                        <button onClick={() => CurrentValues(1, valueGoal1)} style={{ backgroundColor: \"white\", height: \"26px\", marginTop: \"-1px\", border: \"1px solid #2FAAF4\", opacity: \"1\" }}>  <img src={v} style={{ height: '50%', color: \"white\" }} alt=\"V\" /></button>\r\n                                                    </div></div>\r\n\r\n                                              \r\n                                             \r\n                                            </div>\r\n                                        </div>\r\n\r\n                                      \r\n                                    </div>\r\n                                    <div className=\"row\" style={{ margin: '1px', fontWeight: 'bolder' }}>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}>\r\n                                <Paper className=\"paperTwo\" style={{ padding: 10, background: 'white', cursor: 'pointer', color: '#81ADD3', borderRadius: '14px', height: '100px', width: '240px' }}>\r\n                                    <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder', color: \"#000000\" }}>\r\n                                        Total presentations {\" \"}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-between\">\r\n                                        <div className=\"ml-2\" >\r\n                                            <div class=\"col-6 ml-2\">\r\n                                                <h6 style={{ color: \"#000000\", fontSize: \"19px\" }}>  {ReducerData.GoalsStatic.presentationsSum ? ReducerData.GoalsStatic.presentationsSum + \"/\" + ReducerData.CurrentValuesGoals.presentationsSum : \"0/500\"}</h6>\r\n                                                <div className=\"gouge\">\r\n                                                    <SpeedometerPresentations className=\"gouge1\"></SpeedometerPresentations></div>\r\n                                                {/* <div  onClick={() => { window.location.assign('https://pay.leader.codes/') }}  className=\"upladge\" style={{ backgroundColor: \"#4BBAFD\" ,textAlign: \"center\"}}>upradge</div> */}\r\n                                            </div>\r\n                                            <div className=\"d-flex flex-row\" style={{ marginLeft: \"22px\" }}>\r\n                                                <div>\r\n                                                    <input onFocus={(e) => e.currentTarget.placeholder = ''} onChange={(e) => (setValueGoal2(e.target.value))} className=\"myInput\" placeholder=\"Set Goal\" type=\"number\" value={valueGoal2} style={{ background: \"#4BBAFD\", border: \"1px solid #2FAAF4\", borderRadius: \" 3px\", opacity: \"1\", textAlign: \"center\" }}></input></div>\r\n                                                <div>\r\n                                                    <button onClick={() => CurrentValues(2, valueGoal2)} style={{ backgroundColor: \"white\", height: \"26px\", marginTop: \"-1px\", border: \"1px solid #2FAAF4\", opacity: \"1\" }}>  <img src={v} style={{ height: '50%', color: \"white\" }} alt=\"V\" /></button>\r\n                                                </div></div>\r\n\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                    {/* <div className=\"row\" style={{ margin: '1px' }}>\r\n                                    </div> */}\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}  >\r\n                                <Paper className=\"paperThree\" style={{ cursor: 'pointer', padding: 10, background: 'white', color: '#C1EAF8', borderRadius: '14px', height: '100px', width: '240px' }}>\r\n                                    <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder', color: \"#000000\" }}>\r\n                                        Total deals {\" \"}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-between\">\r\n                                        <div className=\"ml-2\">\r\n                                            <div class=\"col-6 ml-2\">\r\n                                                <h6 style={{ color: \"#000000\", fontSize: \"19px\" }}>\r\n                                                    {ReducerData.GoalsStatic.dealsSum ? ReducerData.GoalsStatic.dealsSum + \"/\" + ReducerData.CurrentValuesGoals.dealsSum : \"0/500\"}</h6>\r\n                                                <div className=\"gouge\">\r\n                                                    <SpeedometerDeals className=\"gouge1\"></SpeedometerDeals>\r\n                                                </div>\r\n                                                <div className=\"d-flex flex-row\">\r\n                                                    <div>\r\n                                                        <input onFocus={(e) => e.currentTarget.placeholder = ''} onChange={(e) => (setValueGoal3(e.target.value))} className=\"myInput\" placeholder=\"Set Goal\" type=\"number\" value={valueGoal3} style={{ background: \"#4BBAFD\", border: \"1px solid #2FAAF4\", borderRadius: \" 3px\", opacity: \"1\", textAlign: \"center\" }}></input></div>\r\n                                                    <div>\r\n                                                        <button onClick={() => CurrentValues(3, valueGoal3)} style={{ backgroundColor: \"white\", height: \"26px\", marginTop: \"-1px\", border: \"1px solid #2FAAF4\", opacity: \"1\" }}>  <img src={v} style={{ height: '50%', color: \"white\" }} alt=\"V\" /></button>\r\n                                                    </div></div>\r\n\r\n                                                {/* <div onClick={() => { window.location.assign('https://pay.leader.codes/') }} className=\"upladge\" style={{ backgroundColor: \"#4BBAFD\" ,textAlign: \"center\"}}>upradge</div> */}\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"col-4\">\r\n                                            {/* <Avatar style={{ background: '#FFFFFF', boxShadow: ' 0px 0px 20px #00000033' }}>\r\n                                        <img src={forms} alt=\"icon three\" />\r\n                                    </Avatar> */}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ margin: '1px' }}>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n                            <Grid item xs={12} sm={3}  >\r\n                                <Paper className=\"paperFour\" style={{\r\n                                    padding: 10, background: 'white'\r\n\r\n                                    , color: '#C1EAF8', borderRadius: '14px', cursor: 'pointer', height: '100px', width: '240px'\r\n                                }}>\r\n                                    <div className=\"ml-2 cardFor\" style={{ textAlign: 'start', fontWeight: 'bolder', color: \"#000000\" }}>\r\n                                        Total newContacts  {\" \"}\r\n                                    </div>\r\n                                    <div class=\"row justify-content-between\">\r\n                                        <div class=\" ml-2\">\r\n                                            <div className=\" col-6 ml-2\" >\r\n                                                <h6 style={{ color: \"#000000\", fontSize: \"19px\" }}>{ReducerData.GoalsStatic.newContactsSum ? ReducerData.GoalsStatic.newContactsSum + \"/\" + ReducerData.CurrentValuesGoals.newContactsSum : \"0/500\"}\r\n                                                </h6>\r\n\r\n                                                <div className=\"gouge\">\r\n                                                    <SpeedometerNewContacts className=\"gouge1\"></SpeedometerNewContacts>\r\n\r\n\r\n                                                </div>\r\n\r\n                                                <div className=\"d-flex flex-row\">\r\n                                                    <div>\r\n                                                        <input onFocus={(e) => e.currentTarget.placeholder = ''} onChange={(e) => (setValueGoal4(e.target.value))} className=\"myInput\" placeholder=\"Set Goal\" type=\"number\" value={valueGoal4} style={{ background: \"#4BBAFD\", border: \"1px solid #2FAAF4\", borderRadius: \" 3px\", opacity: \"1\", textAlign: \"center\" }}></input></div>\r\n                                                    <div>\r\n                                                        <button onClick={() => CurrentValues(4, valueGoal4)} style={{ backgroundColor: \"white\", height: \"26px\", marginTop: \"-1px\", border: \"1px solid #2FAAF4\", opacity: \"1\" }}>  <img src={v} style={{ height: '50%', color: \"white\" }} alt=\"V\" /></button>\r\n                                                    </div></div>\r\n\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"row\" style={{ margin: '1px' }}>\r\n                                    </div>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </div>\r\n                    <div className=\"div-container\">\r\n                        <Container className=\"p-0\">\r\n                            <div class=\"container p-0\">\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-md-6 mb-0 text-time-container\">\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </Container>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n})","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\middleware\\crudMiddleware.js",["67"],"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\reducers\\staticDetailsReducer.js",["68","69"],"\r\n\r\n\r\nimport produce from 'immer';\r\nimport moment from 'moment';\r\n\r\nimport { createReducer } from \"./reducerUtils\";\r\n\r\nconst initialState = {\r\n    leaderStatic: { sumProjects: 0, sumTasks: 0, sumPapers: 0, sumContacts: 0 },\r\n    GoalsStatic: { appointmentsSum: 0, presentationsSum: 0, dealsSum: 0, newContactsSum: 0 },\r\n    CurrentValuesGoals: { appointmentsSum: 0, presentationsSum: 0, dealsSum: 0, newContactsSum: 0 },\r\n    dataStatic: [],\r\n    sumStatic: { viewer: 0, contactOptions: 0, submitioms: 0 },\r\n    AllProject: [],\r\n    AllTask: [],\r\n    AllContact: [],\r\n    AllPapers: [],\r\n    AllDeals: [],\r\n    AllDeals: [],\r\n    AllAppointments: [],\r\n    AllDataDeals: [],\r\n    sumAppointments: 0,\r\n    sumPresentations: 0,\r\n    sumDeals: 0,\r\n\r\n    goal1: 0,\r\n\r\n    isClicked: 0,\r\n    arrTime: ['Day', 'Week', 'Month', 'Year'],\r\n    choose: 'Day',\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n};\r\n\r\nconst staticData = {\r\n\r\n    setAppointmentsData(state, action) {\r\n         \r\n        state.sumAppointments = 0\r\n        state.AllDataDeals = action.payload\r\n        let Data = state.AllDataDeals.result\r\n        let dateBeforeMonth = moment().subtract(1, 'month').format('MM/DD/YYYY');\r\n        for (let i = 0; i < Data.length; i++) {\r\n\r\n            let date1 = Data[i].openDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            const dateFormater = date11[0] + \"/\" + date11[1] + \"/\" + date11[2];\r\n            if (Data[i].dealStage === 'Appointment scheduled' && dateFormater >= dateBeforeMonth)\r\n                state.sumAppointments++\r\n        }\r\n\r\n        state.GoalsStatic.appointmentsSum = state.sumAppointments\r\n\r\n\r\n\r\n    },\r\n    setPresentationsData(state, action) {\r\n        state.sumPresentations = 0\r\n        state.AllDataDeals = action.payload\r\n        let Data = state.AllDataDeals.result\r\n        let dateBeforeMonth = moment().subtract(1, 'month').format('MM/DD/YYYY');\r\n        for (let i = 0; i < Data.length; i++) {\r\n\r\n            let date1 = Data[i].openDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            const dateFormater = date11[0] + \"/\" + date11[1] + \"/\" + date11[2];\r\n            if (Data[i].dealStage === 'Presentation scheduled' && dateFormater >= dateBeforeMonth)\r\n                state.sumPresentations++\r\n        }\r\n\r\n        state.GoalsStatic.presentationsSum = state.sumPresentations\r\n    },\r\n    setDealsStatic(state, action) {\r\n         \r\n        state.sumDeals = 0\r\n        state.AllDataDeals = action.payload\r\n        let Data = state.AllDataDeals.result\r\n        let dateBeforeMonth = moment().subtract(1, 'month').format('MM/DD/YYYY');\r\n        for (let i = 0; i < Data.length; i++) {\r\n\r\n            let date1 = Data[i].openDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            const dateFormater = date11[0] + \"/\" + date11[1] + \"/\" + date11[2];\r\n            if (dateFormater >= dateBeforeMonth)\r\n                state.sumDeals++\r\n        }\r\n        state.GoalsStatic.dealsSum = state.sumDeals\r\n\r\n    },\r\n    setNewContactData(state, action) {\r\n         \r\n        state.GoalsStatic.newContactsSum = action.payload\r\n\r\n    },\r\n    ClickFilter(state, action) {\r\n        state.isClicked = action.payload\r\n    },\r\n   setGoalsServer(state, action) {\r\n\r\n        \r\n    let key=action.payload.typeNumber\r\n    let val=action.payload.valueGoal\r\n    \r\n    val=parseInt(val);\r\n\r\n    switch (key) {\r\n            case 1:\r\n            state.CurrentValuesGoals.appointmentsSum=val\r\n            break;\r\n            case 2:\r\n            state.CurrentValuesGoals.presentationsSum=val\r\n            break;\r\n            case 3:\r\n            state.CurrentValuesGoals.dealsSum=val\r\n            break;\r\n           case 4:\r\n            state.CurrentValuesGoals.newContactsSum=val\r\n            break;\r\n    }\r\n   \r\n        // let num=action.payload;\r\n        // num=parseInt(num);\r\n        // state.CurrentValuesGoals.appointmentsSum=num\r\n\r\n},\r\n    // setGoalServer(state, action) {\r\n         \r\n    //     // state.CurrentValuesGoals.appointments=action.payload\r\n\r\n    // },\r\n\r\n\r\n    setDataGoals(state, action) {\r\n         \r\n        const currentData = action.payload\r\n        state.CurrentValuesGoals.appointmentsSum = currentData.appointmentsSum\r\n        state.CurrentValuesGoals.presentationsSum = currentData.presentationsSum\r\n        state.CurrentValuesGoals.dealsSum = currentData.dealsSum\r\n        state.CurrentValuesGoals.newContactsSum = currentData.newContactsSum\r\n\r\n\r\n\r\n    },\r\n \r\n    // setSumMeets(state,action){\r\n    //      \r\n    //     state.AllDeals=action.payload\r\n    //     let sum=0\r\n    //     const meets=(state.AllDeals.result).map((d) => {if (d.dealStage==='Appointment scheduled') sum++});\r\n    //     console.log(sum)\r\n\r\n\r\n}\r\n\r\n\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\actions\\staticAction.js",[],"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\Redux\\reducers\\reducerUtils.js",[],"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\SpeedometerAppointments.js",[],"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\SpeedometerDeals.js",[],"C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\SpeedometerNewContacts.js",["70"],"import React from 'react';\r\nimport ReactSpeedometer from \"react-d3-speedometer\"\r\nimport { useSelector } from 'react-redux'\r\n\r\n\r\nexport default function App() {\r\n\r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n    console.log(UpdatedData.leaderStatic.sumProjects + \"in gouge2\");\r\n    let s=UpdatedData.CurrentValuesGoals.newContactsSum\r\n    return (\r\n        <ReactSpeedometer\r\n            value={UpdatedData.GoalsStatic.newContactsSum}\r\n            width={100}\r\n            height={100}\r\n            fluidWidth={false}\r\n            valueTextFontSize={'0px'}\r\n            maxValue={UpdatedData.CurrentValuesGoals.newContactsSum}\r\n            segmentColors={[\r\n                \"#2FAAF4\",\r\n                \"#2FAAF4\",\r\n                \"#0F93E3\",\r\n                \"#007FCC\",\r\n                \"#0064A0\",\r\n             ]}\r\n            labelFontSize={'0'}\r\n            ringWidth={16}\r\n            needleHeightRatio={0.34}\r\n            needleColor={'2E2E2E'}\r\n            forceRender={true}\r\n            // valueTextFontSize={0}\r\n        />\r\n    );\r\n}","C:\\Users\\User\\Desktop\\Deals\\LeaderStatic-1\\src\\components\\SpeedometerPresentations.js",[],{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":1,"column":27,"nodeType":"77","messageId":"78","endLine":1,"endColumn":36},{"ruleId":"75","severity":1,"message":"79","line":2,"column":8,"nodeType":"77","messageId":"78","endLine":2,"endColumn":14},{"ruleId":"75","severity":1,"message":"80","line":4,"column":10,"nodeType":"77","messageId":"78","endLine":4,"endColumn":16},{"ruleId":"75","severity":1,"message":"81","line":7,"column":8,"nodeType":"77","messageId":"78","endLine":7,"endColumn":14},{"ruleId":"75","severity":1,"message":"82","line":9,"column":8,"nodeType":"77","messageId":"78","endLine":9,"endColumn":9},{"ruleId":"75","severity":1,"message":"83","line":13,"column":8,"nodeType":"77","messageId":"78","endLine":13,"endColumn":13},{"ruleId":"75","severity":1,"message":"84","line":36,"column":19,"nodeType":"77","messageId":"78","endLine":36,"endColumn":27},{"ruleId":"85","severity":1,"message":"86","line":67,"column":8,"nodeType":"87","messageId":"88","endLine":74,"endColumn":10},{"ruleId":"89","severity":1,"message":"90","line":20,"column":5,"nodeType":"91","messageId":"92","endLine":20,"endColumn":13},{"ruleId":"93","severity":1,"message":"94","line":109,"column":5,"nodeType":"95","messageId":"96","endLine":122,"endColumn":6},{"ruleId":"75","severity":1,"message":"97","line":10,"column":9,"nodeType":"77","messageId":"78","endLine":10,"endColumn":10},"no-native-reassign",["98"],"no-negated-in-lhs",["99"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'Navbar' is defined but never used.","'Avatar' is defined but never used.","'$' is defined but never used.","'forms' is defined but never used.","'setInput' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-dupe-keys","Duplicate key 'AllDeals'.","ObjectExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","'s' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]