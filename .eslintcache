[{"C:\\Users\\User\\Videos\\LeaderStatic\\src\\index.js":"1","C:\\Users\\User\\Videos\\LeaderStatic\\src\\App.js":"2","C:\\Users\\User\\Videos\\LeaderStatic\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Videos\\LeaderStatic\\src\\components\\Chart2.js":"4","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\staticStore.js":"5","C:\\Users\\User\\Videos\\LeaderStatic\\src\\components\\InformationTemp.js":"6","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js":"7","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js":"8","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\actions\\staticAction.js":"9","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js":"10"},{"size":517,"mtime":1612820669019,"results":"11","hashOfConfig":"12"},{"size":718,"mtime":1612820669004,"results":"13","hashOfConfig":"12"},{"size":375,"mtime":1612820669019,"results":"14","hashOfConfig":"12"},{"size":5336,"mtime":1612870704827,"results":"15","hashOfConfig":"12"},{"size":467,"mtime":1612820669007,"results":"16","hashOfConfig":"12"},{"size":16318,"mtime":1612907440099,"results":"17","hashOfConfig":"12"},{"size":4485,"mtime":1612862500126,"results":"18","hashOfConfig":"12"},{"size":4984,"mtime":1612907110205,"results":"19","hashOfConfig":"12"},{"size":478,"mtime":1612820669005,"results":"20","hashOfConfig":"12"},{"size":1164,"mtime":1612854883020,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"9rpw8t",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"C:\\Users\\User\\Videos\\LeaderStatic\\src\\index.js",[],["45","46"],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\App.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\components\\Chart2.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\staticStore.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\components\\InformationTemp.js",["47","48","49","50","51","52","53","54","55","56"],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js",["57"],"import { actions } from '../actions/staticAction'\r\n\r\n// ---------------A function that extracts the jwt from the cookies----------------\r\nexport const getCookie = (c_name) => {\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + '=');\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(';', c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return '';\r\n};\r\nexport const getStaticData = ({ dispatch, getState }) => next => action => {\r\n  // with this type client enter to application:INIT_DATA\r\n  if (action.type === 'INIT_DATA') {\r\n    let jwt = getCookie('jwt');\r\n    //  fetch to get sum of projects for user-----------------\r\n    fetch('https://reacthub.dev.leader.codes/api/renana-il/getAllProjectsForUser', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJIZXNJaFlXaVU2Z1A3M1NkMHRXaDJZVzA4ZFkyIiwiZW1haWwiOiJyZW5hbmFAbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjA3NTkxOTI5fQ.U2FQ7I4qBXW9DF-SVJqxKiWgVs5tjSo06pyvmuwzCFU\",\r\n        //    Authorization: jwt,\r\n      },\r\n    })\r\n\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n\r\n        //all data for project\r\n        let projectData = data.userProjectsList\r\n        //only sumProject\r\n        let sumProject = data.countProjectsForUser\r\n\r\n        dispatch(actions.setProjectStatic(sumProject));\r\n        dispatch(actions.setProjectData(projectData));\r\n        dispatch(actions.setProjectChart(projectData));\r\n        console.log(data)\r\n\r\n      })\r\n    // fetch to get sum tasks for user-------------\r\n    fetch('https://reacthub.dev.leader.codes/api/renana-il/getAllTasksForUser', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJIZXNJaFlXaVU2Z1A3M1NkMHRXaDJZVzA4ZFkyIiwiZW1haWwiOiJyZW5hbmFAbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjA3NTkxOTI5fQ.U2FQ7I4qBXW9DF-SVJqxKiWgVs5tjSo06pyvmuwzCFU\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        //all data for project\r\n        let taskData = data.userTasksList\r\n        //only sumTask\r\n        let sumTask = (data.countTasksForUser)\r\n\r\n        dispatch(actions.setTaskStatic(sumTask));\r\n        dispatch(actions.setTaskData(taskData));\r\n        dispatch(actions.setTaskChart(taskData));\r\n        console.log(data)\r\n      })\r\n    //  fetch to get sum of papers for user-----------------\r\n    fetch('https://papers.dev.leader.codes/api/ruth109476@gmail.com/getAllQuote', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJEWWMzVlVtRUhTY3FhWkJ3MzAwbHY4OWZuYTgyIiwiZW1haWwiOiJydXRoMTA5NDc2QGdtYWlsLmNvbSIsImlhdCI6MTYxMTcyNjEzN30.sDgXmAvDj3JirPgU5AksbPVMdtxHVIAU9rgTFAeAluE\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        // let sumPapers = (data.quotes.length)\r\n        let sumPapers = (data.quotes.length)\r\n        let d=data.quotes\r\n\r\n        dispatch(actions.setPaperStatic(sumPapers));\r\n        dispatch(actions.setPaperData(d));\r\n        dispatch(actions.setPaperChart(d));\r\n        console.log(data)\r\n      })\r\n    // fetch to get sum of contacts for user----------------------\r\n    fetch('https://api.dev.leader.codes/blabla101/getContacts/?includesConversations=false', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJzaW1kc01ycmNKZHBRZ3RhOGtnWHlRQmRERnkyIiwiZW1haWwiOiJjdG9AbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjEwNDM3MDcxfQ.vn3nemrfKrW2TKQqwtkIoyaRZRjS8JBEhTtmIWzdc04\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((dataContact) => {\r\n        //all data for contact\r\n        let contactData = dataContact\r\n        //only sumContact\r\n        let sumContact = (dataContact.length)\r\n\r\n        dispatch(actions.setContactStatic(sumContact));\r\n        dispatch(actions.setContactData(contactData));\r\n        dispatch(actions.setContactChart(contactData));\r\n        console.log(contactData)\r\n      })\r\n  }\r\n  return next(action)\r\n}","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js",["58","59","60","61"],"import produce from 'immer';\r\nimport { createReducer } from \"./reducerUtils\";\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    leaderStatic: { sumProjects: 0, sumTasks: 0, sumPapers: 0, sumContacts: 0 },\r\n    dataStatic: [],\r\n    sumStatic: { viewer: 0, contactOptions: 0, submitioms: 0 },\r\n    AllProject: [],\r\n    AllTask: [],\r\n    AllContact: [],\r\n    AllPapers: [],\r\n\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n\r\n};\r\n\r\nconst staticData = {\r\n\r\n    //  setStaticData(state, action) {\r\n    //      \r\n    // //   state.sumStatic=action.payload.viewers.map((viewer) =>new Date(viewer.data))\r\n    //     state.dataStatic=action.payload;\r\n    //      \r\n    //     state.sumStatic.viewer=sumData(state.dataStatic.viewers);\r\n    //      \r\n    //     state.sumStatic.contactOptions=sumData(state.dataStatic.contactOptions);\r\n    //     state.sumStatic.submitioms=sumData(state.dataStatic.submitioms);\r\n    //      \r\n\r\n    // },\r\n\r\n    setSumStatic(state, action) {\r\n        state.AllProject = (action.payload);\r\n        // state.sumStatic.contactOptions=sumData(action.payload.contactOptions);\r\n        // state.sumStatic.submitioms=sumData(action.payload.submitioms);  \r\n    },\r\n    setProjectStatic(state, action) {\r\n        state.leaderStatic.sumProjects = action.payload\r\n    },\r\n    setProjectData(state, action) {\r\n\r\n        state.AllProject = action.payload\r\n    },\r\n    setTaskStatic(state, action) {\r\n        state.leaderStatic.sumTasks = action.payload\r\n\r\n    },\r\n    setTaskData(state, action) {\r\n\r\n        state.AllTask = action.payload\r\n    },\r\n    setTaskChart(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        console.log(initialState.tasks)\r\n        const arr = [...state.tasks];\r\n        for (let i = 0; i < allData.length; i++) {\r\n\r\n            const date1 = allData[i].startDate.split(\"/\")\r\n            let date2 = date1[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.tasks = [...arr];\r\n        console.log(state.tasks)\r\n    },\r\n    setProjectChart(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        const arr = [...state.projects];\r\n        for (let i = 0; i < allData.length; i++) {\r\n\r\n            const date1 = allData[i].dueDate.split(\"/\")\r\n            let date2 = date1[1]\r\n\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.projects = [...arr];\r\n        console.log(state.projects)\r\n    },\r\n    setPaperChart(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        console.log(initialState.papers)\r\n        const arr = [...state.papers];\r\n        for (let i = 0; i < allData.length; i++) {\r\n\r\n            const date1 = allData[i].createdDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.papers = [...arr];\r\n    },\r\n\r\n    setContactChart(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        console.log(initialState.contacts)\r\n        const arr = [...state.contacts];\r\n        for (let i = 0; i < allData.length; i++) {\r\n\r\n            const date1 = allData[i].createDateAndTime\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n\r\n        state.contacts = [...arr];\r\n    },\r\n    setPaperStatic(state, action) {\r\n        state.leaderStatic.sumPapers = action.payload\r\n    },\r\n\r\n    setContactStatic(state, action) {\r\n        state.leaderStatic.sumContacts = action.payload\r\n    },\r\n    setContactData(state, action) {\r\n\r\n        state.AllContact = action.payload\r\n\r\n    }, setPaperData(state, action) {\r\n\r\n        state.AllPapers = action.payload\r\n\r\n    }\r\n};\r\n\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\actions\\staticAction.js",[],"C:\\Users\\User\\Videos\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":17,"nodeType":"68","messageId":"69","endLine":1,"endColumn":26},{"ruleId":"70","severity":1,"message":"71","line":43,"column":34,"nodeType":"72","messageId":"73","endLine":43,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":50,"column":33,"nodeType":"72","messageId":"73","endLine":50,"endColumn":35},{"ruleId":"70","severity":1,"message":"71","line":55,"column":34,"nodeType":"72","messageId":"73","endLine":55,"endColumn":36},{"ruleId":"70","severity":1,"message":"71","line":62,"column":31,"nodeType":"72","messageId":"73","endLine":62,"endColumn":33},{"ruleId":"74","severity":1,"message":"75","line":194,"column":41,"nodeType":"76","endLine":194,"endColumn":88},{"ruleId":"74","severity":1,"message":"75","line":216,"column":41,"nodeType":"76","endLine":216,"endColumn":88},{"ruleId":"74","severity":1,"message":"75","line":239,"column":41,"nodeType":"76","endLine":239,"endColumn":64},{"ruleId":"77","severity":1,"message":"78","line":249,"column":54,"nodeType":"79","endLine":249,"endColumn":78},{"ruleId":"74","severity":1,"message":"75","line":261,"column":41,"nodeType":"76","endLine":261,"endColumn":63},{"ruleId":"66","severity":1,"message":"80","line":21,"column":9,"nodeType":"68","messageId":"69","endLine":21,"endColumn":12},{"ruleId":"70","severity":1,"message":"81","line":66,"column":26,"nodeType":"72","messageId":"73","endLine":66,"endColumn":28},{"ruleId":"70","severity":1,"message":"81","line":88,"column":26,"nodeType":"72","messageId":"73","endLine":88,"endColumn":28},{"ruleId":"70","severity":1,"message":"81","line":111,"column":26,"nodeType":"72","messageId":"73","endLine":111,"endColumn":28},{"ruleId":"70","severity":1,"message":"81","line":134,"column":30,"nodeType":"72","messageId":"73","endLine":134,"endColumn":32},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'jwt' is assigned a value but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation"]