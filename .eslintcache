[{"C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\staticStore.js":"4","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\Chart2.js":"5","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\NewChart.js":"6","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\FusionChart.js":"7","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\ChartT.js":"8","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\BarT.js":"9","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\Time.js":"10","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\InformationTemp.js":"11","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\TotalChart.js":"12","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\Fasion2.js":"13","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\reducers\\staticDetailsReducer.js":"14","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\middleware\\crudMiddleware.js":"15","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\reducers\\reducerDay.js":"16","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\actions\\staticAction.js":"17","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\reducers\\reducerUtils.js":"18"},{"size":517,"mtime":1614023197570,"results":"19","hashOfConfig":"20"},{"size":926,"mtime":1614505515630,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1614023197571,"results":"22","hashOfConfig":"20"},{"size":533,"mtime":1614505419337,"results":"23","hashOfConfig":"20"},{"size":1119,"mtime":1614606259292,"results":"24","hashOfConfig":"20"},{"size":2123,"mtime":1614023197563,"results":"25","hashOfConfig":"20"},{"size":2785,"mtime":1614505566719,"results":"26","hashOfConfig":"20"},{"size":2880,"mtime":1614507612754,"results":"27","hashOfConfig":"20"},{"size":3214,"mtime":1614507566354,"results":"28","hashOfConfig":"20"},{"size":1780,"mtime":1614167754069,"results":"29","hashOfConfig":"20"},{"size":19921,"mtime":1614509599124,"results":"30","hashOfConfig":"20"},{"size":2551,"mtime":1614507515863,"results":"31","hashOfConfig":"20"},{"size":1995,"mtime":1614023197557,"results":"32","hashOfConfig":"20"},{"size":5829,"mtime":1614505605140,"results":"33","hashOfConfig":"20"},{"size":4823,"mtime":1614702538690,"results":"34","hashOfConfig":"20"},{"size":3173,"mtime":1614505419335,"results":"35","hashOfConfig":"20"},{"size":478,"mtime":1614023197549,"results":"36","hashOfConfig":"20"},{"size":1164,"mtime":1614023197552,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"r06a8g",{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"40"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"40"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"40"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"40"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"78","messages":"79","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"40"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\index.js",[],["85","86"],"C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\App.js",["87","88","89","90","91"],"import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/staticStore'\r\nimport InformationTemp from './components/InformationTemp'\r\nimport Chart2 from './components/Chart2'\r\nimport FusionChart from './components/FusionChart'\r\nimport NewChart from './components/NewChart'\r\nimport ChartT from './components/ChartT'\r\nimport BarT from './components/BarT'\r\n// import Nav from './components/Nav'\r\nimport {Menu} from './components/Time'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid \">\r\n      <Provider store={store}>\r\n        <InformationTemp></InformationTemp>\r\n      {/* <Menu></Menu> */}\r\n        {/* <Nav></Nav> */}\r\n        <Chart2></Chart2>\r\n        {/* <FusionChart></FusionChart> */}\r\n        {/* <NewChart></NewChart> */}\r\n        {/* <ChartT></ChartT> */}\r\n        {/* <BarT></BarT> */}\r\n      </Provider>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\staticStore.js",[],"C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\Chart2.js",[],"C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\NewChart.js",["92"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport default function App(props) {\r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n\r\n    const chart = useRef(null);\r\n\r\n    useLayoutEffect(() => {\r\n        let x = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n\r\n        x.paddingRight = 20;\r\n        //    let data= [\r\n        //         UpdatedData.leaderStatic.sumContacts,\r\n        //         UpdatedData.leaderStatic.sumPapers,\r\n        //         UpdatedData.leaderStatic.sumProjects,\r\n        //         UpdatedData.leaderStatic.sumTasks,\r\n        //     ]\r\n        let data = []\r\n        let visits = 10;\r\n\r\n        for (let i = 1; i < 366; i++) {\r\n            visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n            data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n        }\r\n\r\n        x.data = data;\r\n\r\n        let dateAxis = x.xAxes.push(new am4charts.DateAxis());\r\n        dateAxis.renderer.grid.template.location = 0;\r\n        // let dateAxis =[\"contact\",\"papers\",\"projects\",\"tasks\"]\r\n\r\n        let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\r\n        valueAxis.tooltip.disabled = true;\r\n        valueAxis.renderer.minWidth = 35;\r\n\r\n        let series = x.series.push(new am4charts.LineSeries());\r\n        series.dataFields.dateX = \"date\";\r\n        series.dataFields.valueY = \"value\";\r\n        series.tooltipText = \"{valueY.value}\";\r\n        x.cursor = new am4charts.XYCursor();\r\n\r\n        let scrollbarX = new am4charts.XYChartScrollbar();\r\n        scrollbarX.series.push(series);\r\n        x.scrollbarX = scrollbarX;\r\n\r\n        chart.current = x;\r\n\r\n        return () => {\r\n            x.dispose();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\r\n    );\r\n}\r\n","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\FusionChart.js",["93"],"\r\nimport React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport Fasion2 from './Fasion2'\r\nimport TotalChart from './TotalChart'\r\nimport { useSelector } from 'react-redux'\r\n\r\ncharts(FusionCharts);\r\n\r\nexport default function MyComponent() {\r\n    // colors: [' rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgb(253, 81, 219)'],\r\n\r\n    const rgbToHex = (r, g, b) => '#' + [r, g, b].map(x => {\r\n        const hex = x.toString(16)\r\n        return hex.length === 1 ? '0' + hex : hex\r\n    }).join('')\r\n    //   \"\"\r\n    console.log(rgbToHex(247, 181, 0)); // '#f7b500'\r\n    console.log(rgbToHex(1, 220, 209)); // \"#01dcd1\"\r\n    console.log(rgbToHex(103, 114, 222)); // \"#6772de\"\r\n    console.log(rgbToHex(253, 81, 219)); // \"#fd51db\"\r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n    const dataSource = {\r\n        type: 'column3d',\r\n        // renderAt: 'chart-container',\r\n        width: '700',\r\n        height: '250',\r\n        // dataFormat: 'json',\r\n        \"theme\": \" \",\r\n        dataSource: {\r\n            \"chart\": {\r\n                bgColor: \"#ff0000\",\r\n                canvasBgColor: \"#ff0000\",\r\n                // \"bgImage\": \"https://upload.wikimedia.org/wikipedia/commons/7/79/Misc_fruit.jpg\"\r\n            },\r\n        },\r\n        fill: {\r\n            type: 'image',\r\n            image: {\r\n                src: ['https://upload.wikimedia.org/wikipedia/commons/7/79/Misc_fruit.jpg'],\r\n                width: undefined,  // optional\r\n                height: undefined  //optional\r\n            }\r\n        },\r\n        data: [\r\n            {\r\n                label: \"contacts\",\r\n                value: UpdatedData.leaderStatic.sumContacts,\r\n                \"color\": '#f7b500',\r\n\r\n            },\r\n            {\r\n                label: \"papers\",\r\n                value: UpdatedData.leaderStatic.sumPapers,\r\n                \"color\": \"#01dcd1\"\r\n            },\r\n            {\r\n                label: \"projects\",\r\n                value: UpdatedData.leaderStatic.sumProjects,\r\n                \"color\": \"#6772de\"\r\n\r\n\r\n            },\r\n            {\r\n                label: \"tasks\",\r\n                value: UpdatedData.leaderStatic.sumTasks,\r\n                \"color\": \"#fd51db\"\r\n\r\n            }\r\n\r\n\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <div id=\"c\">\r\n                <ReactFusioncharts\r\n                    type=\"column3d\"\r\n                    width=\"40%\"\r\n                    height=\"\r\n                210%\"\r\n                    dataSource={dataSource}\r\n                />\r\n                {/* <Fasion2></Fasion2> */}\r\n                <TotalChart></TotalChart>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\ChartT.js",["94"],"import React from 'react';\r\nimport moment from 'moment';\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function ApexChart() {\r\n  const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n\r\n\r\n\r\n  const state = {\r\n    series: [\r\n\r\n      {\r\n        name: \"contacts\",\r\n        data: [UpdatedData.contacts[1], UpdatedData.contacts[2], UpdatedData.contacts[3], UpdatedData.contacts[4], UpdatedData.contacts[5], UpdatedData.contacts[6], UpdatedData.contacts[7], UpdatedData.contacts[8], UpdatedData.contacts[9], UpdatedData.contacts[10], UpdatedData.contacts[11], UpdatedData.contacts[12]]\r\n      },\r\n      {\r\n        name: \"papers\",\r\n        data: [UpdatedData.papers[1], UpdatedData.papers[2], UpdatedData.papers[3], UpdatedData.papers[4], UpdatedData.papers[5], UpdatedData.papers[6], UpdatedData.papers[7], UpdatedData.papers[8], UpdatedData.papers[9], UpdatedData.papers[10], UpdatedData.papers[11], UpdatedData.papers[12]]\r\n      },\r\n\r\n      {\r\n        name: \"projects\",\r\n        data: [UpdatedData.projects[1], UpdatedData.projects[2], UpdatedData.projects[3], UpdatedData.projects[4], UpdatedData.projects[5], UpdatedData.projects[6], UpdatedData.projects[7], UpdatedData.projects[8], UpdatedData.projects[9], UpdatedData.projects[10], UpdatedData.projects[11], UpdatedData.projects[12]]\r\n      },\r\n      {\r\n        name: \"tasks\",\r\n        data: [UpdatedData.tasks[1], UpdatedData.tasks[2], UpdatedData.tasks[3], UpdatedData.tasks[4], UpdatedData.tasks[5], UpdatedData.tasks[6], UpdatedData.tasks[7], UpdatedData.tasks[8], UpdatedData.tasks[9], UpdatedData.tasks[10], UpdatedData.tasks[11], UpdatedData.tasks[12]]\r\n      }\r\n\r\n    ],\r\n    options: {\r\n      legend: {\r\n        show:false,\r\n      },\r\n      scales: {\r\n      },\r\n      colors: [' rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgba(255, 69, 96, 0.85)'],\r\n      chart: {\r\n        background: '#f8f9fa',\r\n        zoom: { enabled: false },\r\n        height: 350,\r\n        type: \"line\",\r\n        stacked: false,\r\n        toolbar: {\r\n          show: false\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      // colors: [' rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgb(253, 81, 219)'],\r\n      grid: {\r\n        show: false,\r\n        borderColor: '#90A4AE',\r\n        strokeDashArray: 0,\r\n        position: 'back',\r\n        xaxis: {\r\n          lines: {\r\n            show: false\r\n          }\r\n        },\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        width: 3,\r\n      },\r\n      xaxis: {\r\n        categories: ['Jan', 'feb', 'marth', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dic'],\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart options={state.options} series={state.series} type=\"line\" width={420} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\BarT.js",["95"],"\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport { useSelector } from 'react-redux'\r\nimport react from 'react'\r\n\r\nexport default function ApexChart() {\r\n  const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n  const state = {\r\n    series: [{\r\n      name: \" \",\r\n      data: [UpdatedData.leaderStatic.sumContacts,\r\n      UpdatedData.leaderStatic.sumPapers,\r\n      UpdatedData.leaderStatic.sumProjects,\r\n      UpdatedData.leaderStatic.sumTasks]\r\n    }],\r\n    options: {\r\n      xaxis: {\r\n        type: 'category',\r\n        categories: [],\r\n        labels: {\r\n          show: false\r\n        }\r\n      },\r\n\r\n      grid: {\r\n        show: true,\r\n        borderColor: '#90A4AE',\r\n        strokeDashArray: 0,\r\n        position: 'back',\r\n        xaxis: {\r\n          lines: {\r\n            show: false\r\n          },\r\n          labels: {\r\n            show: false\r\n          },\r\n        },\r\n        yaxis: {\r\n          lines: {\r\n            show: false\r\n          },\r\n\r\n        },\r\n        row: {\r\n          colors: undefined,\r\n          opacity: 0.5\r\n        },\r\n        column: {\r\n          colors: undefined,\r\n          opacity: 0.5\r\n        },\r\n\r\n      },\r\n      chart: {\r\n        height: 350,\r\n        type: 'bar',\r\n        background: '#f8f9fa',\r\n        toolbar: {\r\n          show: false\r\n        }\r\n\r\n      },\r\n      colors: ['rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgba(255, 69, 96, 0.85)'],\r\n      plotOptions: {\r\n        bar: {\r\n          borderRadius: 6,\r\n          columnWidth: '50%',\r\n          distributed: true,\r\n        }\r\n      },\r\n      labels: ['contacts', 'papers', 'projects ', 'tasks'],\r\n      dataLabels: {\r\n        show: false,\r\n        enabled: false\r\n      },\r\n      // ----מקרא מפה למטה\r\n      legend: {\r\n        show: false,\r\n        display: false\r\n      },\r\n      tooltip: {\r\n        enabled: true,\r\n        enabledOnSeries: undefined,\r\n        shared: false,\r\n        followCursor: false,\r\n        intersect: false,\r\n        inverseOrder: false,\r\n        custom: undefined,\r\n        fillSeriesColor: false,\r\n        theme: true,\r\n        style: {\r\n          fontSize: '12px',\r\n          fontFamily: undefined\r\n        },\r\n        onDatasetHover: {\r\n          highlightDataSeries: true,\r\n        },\r\n        x: {\r\n          show: true,\r\n          format: 'dd MMM',\r\n          formatter: undefined,\r\n\r\n        },\r\n        y: {\r\n          show: true,\r\n          formatter: undefined,\r\n          title: {\r\n            formatter: (seriesName) => seriesName,\r\n          },\r\n        },\r\n        // z: {\r\n        //   formatter: undefined,\r\n        //   title: 'Size: '\r\n        // },\r\n        marker: {\r\n          show: true,\r\n        },\r\n        // items: {\r\n        //    display: flex,\r\n        // },\r\n        fixed: {\r\n          enabled: false,\r\n          position: 'topRight',\r\n          offsetX: 0,\r\n          offsetY: 0,\r\n        },\r\n      }\r\n\r\n\r\n\r\n      // fillSeriesColor: ['rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgb(253, 81, 219)'],\r\n\r\n    },\r\n\r\n\r\n  };\r\n\r\n  return (\r\n\r\n\r\n    <div id=\"chart\">\r\n      <ReactApexChart options={state.options} series={state.series} type=\"bar\" width=\"420\" />\r\n    </div>\r\n\r\n\r\n  );\r\n}","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\Time.js",[],"C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\InformationTemp.js",["96","97","98","99","100","101","102","103","104","105"],"import React, { useState } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './InformationTemp.css';\r\nimport { connect } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n// import Button from '@material-ui/core/Button';\r\nimport iconOne from '../img/iconOne.png'\r\nimport iconTwo from '../img/iconTwo.png';\r\nimport iconThree from '../img/iconThree.png'\r\nimport iconFour from '../img/iconFour.png'\r\nimport { actions } from '../Redux/actions/staticAction'\r\nimport moment from 'moment';\r\nimport { } from 'react-router-dom'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Navbar, Container } from 'react-bootstrap';\r\nimport { FcNext, FcPrevious } from \"react-icons/fc\";\r\n\r\n\r\n\r\n\r\n\r\n// -------get new date in correct format to filter data----------------------------------------------------\r\n\r\nlet currentDate = moment().format(\"MM/DD/YYYY\");\r\nlet dateBeforeWeek = moment().subtract(1, 'week').format('MM/DD/YYYY');\r\nlet dateBeforeMonth = moment().subtract(1, 'month').format('MM/DD/YYYY');\r\nlet dateBeforeYear = moment().subtract(1, 'year').format('MM/DD/YYYY')\r\n// --------------------------------------------------------------------------------------------------------------\r\nconst useStyles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n    paper: {\r\n        borderRadius: '17px',\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n})\r\nexport default withStyles(useStyles)(function Information() {\r\n    const ReducerData = useSelector(state => state.staticDetailsReducer)\r\n    const dispatch = useDispatch()\r\n    const [value, setValue] = useState(\"Day\")\r\n    let arr = [\"Day\", \"Week\", \"Month\", \"Year\"]\r\n    var circleStyle1 = {\r\n        padding: 6,\r\n        margin: 6,\r\n        display: \"inline-block\",\r\n        // position:'absolute',\r\n        backgroundColor: \"rgb(247, 181, 0)\",\r\n        borderRadius: \"50%\",\r\n        width: 1,\r\n        height: 1,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n    var circleStyle2 = {\r\n        padding: 6,\r\n        margin: 6,\r\n        display: \"inline-block\",\r\n        // position:'absolute',\r\n        backgroundColor: \"rgb(1, 220, 209)\",\r\n        borderRadius: \"50%\",\r\n        width: 1,\r\n        height: 1,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n    var circleStyle3 = {\r\n        padding: 6,\r\n        margin: 6,\r\n        display: \"inline-block\",\r\n        // position:'absolute',\r\n        backgroundColor: \"rgb(103, 114, 222)\",\r\n        borderRadius: \"50%\",\r\n        width: 1,\r\n        height: 1,\r\n        left: 0,\r\n        top: 0\r\n    };\r\n    var circleStyle4 = {\r\n        padding: 6,\r\n        margin: 6,\r\n        display: \"inline-block\",\r\n        // position:'absolute',\r\n        backgroundColor: \"rgba(255, 69, 96, 0.85)\",\r\n        borderRadius: \"50%\",\r\n        width: 1,\r\n        height: 1,\r\n        left: 0,\r\n        top: 1\r\n    };\r\n    function filterby(value, x) {\r\n        debugger\r\n        let index = 0\r\n        let newIndex=0\r\n        debugger\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (value === arr[i]) {\r\n                index = i\r\n                break\r\n            }\r\n        }\r\n        if (x !== null) {\r\n            if (index === 0)\r\n                index = 4\r\n             newIndex = arr[index - 1]\r\n            setValue(newIndex)\r\n        }\r\n        \r\n        else {\r\n            if (index === 3)\r\n                index = -1\r\n            newIndex = arr[index + 1]\r\n            setValue(newIndex)\r\n     \r\n        }\r\n        console.log(newIndex)\r\n        switch (newIndex) {\r\n            case 'Day': filterByDay()\r\n                break;\r\n            case 'Week': filterByWeek()\r\n                break;\r\n            case 'Month': filterByMonth()\r\n                break;\r\n            case 'Year': filterByYear()\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n    //  ---filter by: last day,last week,last month,year\r\n    function filterByDay() {\r\n\r\n        let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (dateFormater == currentDate)\r\n\r\n        })\r\n\r\n        let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (detaContact == currentDate)\r\n        })\r\n        let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (dateFormater == currentDate)\r\n        })\r\n\r\n        let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            return (detaPaper == currentDate)\r\n        })\r\n        dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        dispatch(actions.setContactStatic(AllContactData.length))\r\n        dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        dispatch(actions.ClickFilter(1));\r\n\r\n    }\r\n    function filterByYear() {\r\n        let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (new Date(detaContact) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        dispatch(actions.setContactStatic(AllContactData.length))\r\n        dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        dispatch(actions.ClickFilter(1));\r\n\r\n    }\r\n    //////hgjghghghghghghghghh\r\n    function filterByWeek() {\r\n        let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n        })\r\n        let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n\r\n        let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n        let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (new Date(detaContact) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n        dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        dispatch(actions.setContactStatic(AllContactData.length))\r\n        dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        dispatch(actions.ClickFilter(1));\r\n    }\r\n    function filterByMonth() {\r\n        let AllProjectData = (ReducerData.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n        })\r\n        let AllPapersData = (ReducerData.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n        let AllTaskData = (ReducerData.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n        let AllContactData = (ReducerData.AllContact).filter(function (AllContact) {\r\n            const dateContact1 = (AllContact.createDateAndTime)\r\n            let detaContact = moment(dateContact1).format(\"MM/DD/YYYY\");\r\n            return (new Date(detaContact) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n\r\n        dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        dispatch(actions.setContactStatic(AllContactData.length))\r\n        dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        dispatch(actions.ClickFilter(1));\r\n    }\r\n    return (\r\n        <div className=\"container-fluid mt-5\">\r\n            <div className=\"row pb-5\" style={{ marginRight: '12%', marginLeft: '12%' }} >\r\n                <div className=\"col-3 \" style={{ fontSize: \"30px\", font: \"normal normal bold 18px/27px Roboto\", marginBottom: \"15px\" }}>\r\n                    leads information\r\n                </div>\r\n                <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                    <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                    </div></div>‏\r\n             <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className=\"paperOne\" style={{ cursor: 'pointer', padding: 10, borderRadius: '14px', background: '#FFFDFA', border: '2px Solid #F7B500', color: '#F7B500' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Contacts {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\" >\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5 style={{ fontWeight: 'bolder' }}>\r\n                                            {ReducerData.leaderStatic.sumContacts ? ReducerData.leaderStatic.sumContacts : \"0\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconOne} style={{ height: '50%' }} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px', fontWeight: 'bolder' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className=\"paperTwo\" onClick={() => { window.location.assign('https://papers.dev.leader.codes/admin/ruth109476@gmail.com') }} style={{ padding: 10, background: '#ECFAFA', cursor: 'pointer', border: '2px Solid #01DCD1', color: '#01DCD1', borderRadius: '14px' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Papers {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\" >\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5> {ReducerData.leaderStatic.sumPapers ? ReducerData.leaderStatic.sumPapers : \"0\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconTwo} style={{ height: '50%' }} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}  >\r\n                        <Paper className=\"paperThree\" style={{ cursor: 'pointer', padding: 10, background: '#F2F3FF', border: '2px Solid #6772DE', color: '#6772DE', borderRadius: '14px' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Projects {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\">\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5>\r\n                                            {ReducerData.leaderStatic.sumProjects ? ReducerData.leaderStatic.sumProjects : \"0\"}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: ' 0px 0px 20px #00000033' }}>\r\n                                        <img src={iconThree} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}  >\r\n                        <Paper className=\"paperFour\" style={{ padding: 10, background: '#FFF5FD', border: '2px Solid #FD51DB', color: '#FD51DB', borderRadius: '14px', cursor: 'pointer' }}>\r\n                            <div className=\"cardFor\" className=\"ml-2 cardFor\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Tasks  {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div class=\" ml-2\">\r\n                                    <div className=\" col-6 ml-2\" >\r\n                                        <h5>{ReducerData.leaderStatic.sumTasks ? ReducerData.leaderStatic.sumTasks : \"0\"}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconFour} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            <div>\r\n                <Container >\r\n                    <Navbar expand=\"md\" variant=\"light\" bg=\"light\">\r\n                        <div class=\"container\">\r\n                            <FcPrevious style={{ marginLeft: \"2%\", cursor: 'pointer' }} onClick={() => filterby(value, 1)}></FcPrevious>\r\n                            \r\n                            {value}\r\n                            {/* <div style={{ marginLeft: \"-620px\" }} >{value}</div>  */}\r\n                            <FcNext style={{ marginRight: \"88%\", cursor: 'pointer' }} onClick={() => filterby(value, null)}></FcNext>\r\n                        </div>\r\n\r\n                        <p style={circleStyle1}>\r\n                        </p>\r\n                        <Navbar.Brand style={{ fontSize: \"14px\" }}>contacts</Navbar.Brand>\r\n                        <div style={circleStyle2}>\r\n                        </div>\r\n                        <Navbar.Brand style={{ fontSize: \"14px\" }}>papers</Navbar.Brand>\r\n                        <div style={circleStyle3}>\r\n                        </div>\r\n                        <Navbar.Brand style={{ fontSize: \"14px\" }}>projects</Navbar.Brand>\r\n                        <div style={circleStyle4}>\r\n                        </div>\r\n                        <Navbar.Brand style={{ fontSize: \"14px\" }}>tasks</Navbar.Brand>\r\n                    </Navbar>\r\n                </Container>\r\n            </div>\r\n\r\n            {/* ----------------------------filter by: day ,week, month----------------------------------------------------- */}\r\n            {/* <div>\r\n                <div class=\"row\" style={{ direction: \"rtl\", paddingLeft: \"30%\" }}>\r\n                    ‎\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"520px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByYear}>Year</Button>\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"3px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByMonth}>Month</Button>\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"3px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByWeek}>Week</Button>\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"3px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByDay}>Day</Button>\r\n\r\n                </div>\r\n            </div> */}\r\n        </div>\r\n    )\r\n})","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\TotalChart.js",["106","107"],"import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function ApexChart() {\r\n  \r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n    debugger\r\n    const  sumAll=(UpdatedData.leaderStatic.sumContacts+\r\n        UpdatedData.leaderStatic.sumPapers+\r\n        UpdatedData.leaderStatic.sumProjects+\r\n        UpdatedData.leaderStatic.sumTasks)\r\n    const state = {\r\n       \r\n        series: [UpdatedData.leaderStatic.sumContacts,\r\n        UpdatedData.leaderStatic.sumPapers,\r\n        UpdatedData.leaderStatic.sumProjects,\r\n        UpdatedData.leaderStatic.sumTasks],\r\n        options: {\r\n\r\n            chart: {\r\n                height: 350,\r\n                type: 'radialBar',\r\n                background: '#f8f9fa'\r\n            },\r\n            colors :[' rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgba(255, 69, 96, 0.85)']\r\n\r\n            ,plotOptions: {\r\n                radialBar: {\r\n                    dataLabels: {\r\n                        name: {\r\n                            fontSize: '22px',\r\n                        },\r\n                        value: {\r\n                            fontSize: '16px',\r\n                        },\r\n                        \r\n                        value: {\r\n                            show: true,\r\n                            fontSize: '14px',\r\n                            fontFamily: undefined,\r\n                            fontWeight: 400,\r\n                            color: undefined,\r\n                            offsetY: 16,\r\n                            formatter: function (val) {\r\n                              return val \r\n                            }\r\n                          },\r\n                          total: {\r\n                            show: true,\r\n                            label: 'Total',\r\n                            formatter:function (w) {\r\n                                return w.globals.seriesTotals.reduce((a, b) => {\r\n                                  return a + b\r\n                                }, 0)\r\n                              }\r\n                            \r\n                        },\r\n                    }\r\n                }\r\n            },\r\n            labels: ['contacts', 'papers', 'projects ', 'tasks'],\r\n        },\r\n\r\n\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"col-md-2\" id=\"chart\">\r\n            <ReactApexChart options={state.options} series={state.series} type=\"radialBar\" height={270} width={270} />\r\n        </div>\r\n    )\r\n}","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\components\\Fasion2.js",["108"],"import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport Chart from \"react-apexcharts\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function ApexChart () {\r\n    \r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n        const state = {\r\n\r\n            series: [UpdatedData.leaderStatic.sumContacts,\r\n                UpdatedData.leaderStatic.sumPapers,\r\n                UpdatedData.leaderStatic.sumProjects,\r\n                UpdatedData.leaderStatic.sumTasks],\r\n               \r\n            options: {\r\n                chart: {\r\n                    width: 380,\r\n                    type: 'polarArea'\r\n                },\r\n                labels: ['contacts', 'papers', 'projects ', 'tasks'],\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    width: 1,\r\n                    colors: undefined\r\n                },\r\n                yaxis: {\r\n                    show: false\r\n                },\r\n                legend: {\r\n                    position: 'bottom'\r\n                },\r\n                colors: ['rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgb(253, 81, 219)'],\r\n                \r\n                // plotOptions: {\r\n                //     polarArea: {\r\n                //         rings: {\r\n                //             strokeWidth: 0\r\n                //         }\r\n                //     }\r\n                // },\r\n                // theme: {\r\n                //     monochrome: {\r\n                //         // enabled: true,\r\n                //         // shadeTo: 'light',\r\n                //         // shadeIntensity: 0.6\r\n                //     }\r\n                // }\r\n            },\r\n\r\n\r\n        };\r\n    \r\n\r\n\r\n\r\n   \r\n        return (\r\n\r\n\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={state.options} series={state.series} type=\"polarArea\" width={380} />\r\n            </div>\r\n        )\r\n    }\r\n","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\reducers\\staticDetailsReducer.js",["109","110","111","112"],"import produce from 'immer';\r\nimport { createReducer } from \"./reducerUtils\";\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    leaderStatic: { sumProjects: 0, sumTasks: 0, sumPapers: 0, sumContacts: 0 },\r\n    dataStatic: [],\r\n    sumStatic: { viewer: 0, contactOptions: 0, submitioms: 0 },\r\n    AllProject: [],\r\n    AllTask: [],\r\n    AllContact: [],\r\n    AllPapers: [],\r\n    isClicked: 0,\r\n    arrTime:['Day','Week','Month','Year'],\r\n    choose:'Day',\r\n    // SumAll:0,\r\n   \r\n\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n\r\n};\r\n\r\nconst staticData = {\r\n\r\n    //  setStaticData(state, action) {\r\n    //      \r\n    // //   state.sumStatic=action.payload.viewers.map((viewer) =>new Date(viewer.data))\r\n    //     state.dataStatic=action.payload;\r\n    //      \r\n    //     state.sumStatic.viewer=sumData(state.dataStatic.viewers);\r\n    //      \r\n    //     state.sumStatic.contactOptions=sumData(state.dataStatic.contactOptions);\r\n    //     state.sumStatic.submitioms=sumData(state.dataStatic.submitioms);\r\n    //      \r\n\r\n    // },\r\n    \r\n\r\n    setSumStatic(state, action) {\r\n        state.AllProject = (action.payload);\r\n        // state.sumStatic.contactOptions=sumData(action.payload.contactOptions);\r\n        // state.sumStatic.submitioms=sumData(action.payload.submitioms);  \r\n    },\r\n    setProjectStatic(state, action) {\r\n        state.leaderStatic.sumProjects = action.payload\r\n        // state.SumAll=state.leaderStatic.sumProjects\r\n    },\r\n    setProjectData(state, action) {\r\n\r\n        state.AllProject = action.payload\r\n    },\r\n    setTaskStatic(state, action) {\r\n        state.leaderStatic.sumTasks = action.payload\r\n        // state.SumAll=state.SumAll+state.leaderStatic.sumTasks\r\n\r\n    },\r\n    setTaskData(state, action) {\r\n\r\n        state.AllTask = action.payload\r\n    },\r\n    setTaskChart(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        console.log(initialState.tasks)\r\n    \r\n        const arr = [...state.tasks];\r\n        for (let i = 0; i < 9; i++) {\r\n           \r\n\r\n            const date1 = allData[i].startDate.split(\"/\")\r\n            let date2 = date1[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.tasks = [...arr];\r\n        console.log(state.tasks)\r\n    },\r\n    setProjectChart(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        const arr = [...state.projects];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].dueDate.split(\"/\")\r\n            let date2 = date1[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.projects = [...arr];\r\n        console.log(state.projects)\r\n    },\r\n    setPaperChart(state = initialState, action) {\r\n       \r\n\r\n        let allData = action.payload\r\n        console.log(initialState.papers)\r\n        const arr = [...state.papers];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createdDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.papers = [...arr];\r\n    },\r\n    setContactChart(state = initialState, action) {\r\n        let allData = action.payload\r\n        console.log(initialState.contacts)\r\n        const arr = [...state.contacts];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createDateAndTime\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.contacts = [...arr];\r\n    },\r\n    setPaperStatic(state, action) {\r\n        state.leaderStatic.sumPapers = action.payload\r\n        // state.SumAll= state.SumAll+state.leaderStatic.sumPapers\r\n    },\r\n    setContactStatic(state, action) {\r\n        \"\"\r\n        state.leaderStatic.sumContacts = action.payload\r\n        // state.SumAll= state.SumAll+state.leaderStatic.sumContacts \r\n    //   console.log(state.SumAll)\r\n    },\r\n    setContactData(state, action) {\r\n        state.AllContact = action.payload\r\n    }, setPaperData(state, action) {\r\n        state.AllPapers = action.payload\r\n    },\r\n    ClickFilter(state, action) {\r\n        state.isClicked = action.payload\r\n    },\r\n    IsChooseNext(state= initialState, action){\r\n        let y=action.payload\r\n       state.choose =state.arrTime[y]\r\n      \r\n\r\n  },\r\n   IsChoosePrevious(state=initialState, action){\r\n    let y=action.payload\r\n    state.choose=state.arrTime[y]\r\n\r\n\r\n  }\r\n\r\n    // sumAll=(UpdatedData.papers+updatedData.contacts+updatedData.projects+updatedData.tasks)\r\n};\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\middleware\\crudMiddleware.js",["113"],"C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\reducers\\reducerDay.js",["114","115","116","117","118"],"import produce from 'immer';\r\nimport { createReducer } from \"./reducerUtils\";\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n}\r\n\r\nconst staticData = {\r\n    TaskChartDay(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        console.log(initialState.tasks)\r\n        const arr = [...state.tasks];\r\n        for (let i = 0; i < arr.length; i++) {\r\n\r\n            const date1 = allData[i].startDate.split(\"/\")\r\n            let date2 = date1[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.tasks = [...arr];\r\n        console.log(state.tasks)\r\n    },\r\n    ProjectChartDay(state = initialState, action) {\r\n        debugger\r\n        let allData = action.payload\r\n        const arr = [...state.projects];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            let day = allData[i].dueDate\r\n           let m= moment(day).weekday()\r\n            console.log(moment().isoWeekday())\r\n           let d= moment(day).isoWeekday()\r\n            const date = moment(day); // Thursday Feb 2015\r\n            debugger\r\n            const dow = date.day();\r\n            const x = (arr[dow]) + 1\r\n            arr[dow] = x;\r\n        }\r\n        state.projects = [...arr];\r\n        console.log(state.projects)\r\n    },\r\n    PaperChartDay(state = initialState, action) {\r\n        let allData = action.payload\r\n        console.log(initialState.papers)\r\n        const arr = [...state.papers];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createdDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.papers = [...arr];\r\n    },\r\n    ContactChartDay(state = initialState, action) {\r\n        let allData = action.payload\r\n        console.log(initialState.contacts)\r\n        const arr = [...state.contacts];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createDateAndTime\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.contacts = [...arr];\r\n    },\r\n};\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\actions\\staticAction.js",[],"C:\\Users\\User\\Desktop\\Charts\\leaderstatic\\src\\Redux\\reducers\\reducerUtils.js",[],{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":19},{"ruleId":"123","severity":1,"message":"127","line":7,"column":8,"nodeType":"125","messageId":"126","endLine":7,"endColumn":16},{"ruleId":"123","severity":1,"message":"128","line":8,"column":8,"nodeType":"125","messageId":"126","endLine":8,"endColumn":14},{"ruleId":"123","severity":1,"message":"129","line":9,"column":8,"nodeType":"125","messageId":"126","endLine":9,"endColumn":12},{"ruleId":"123","severity":1,"message":"130","line":11,"column":9,"nodeType":"125","messageId":"126","endLine":11,"endColumn":13},{"ruleId":"123","severity":1,"message":"131","line":11,"column":11,"nodeType":"125","messageId":"126","endLine":11,"endColumn":22},{"ruleId":"123","severity":1,"message":"132","line":6,"column":8,"nodeType":"125","messageId":"126","endLine":6,"endColumn":15},{"ruleId":"123","severity":1,"message":"133","line":2,"column":8,"nodeType":"125","messageId":"126","endLine":2,"endColumn":14},{"ruleId":"123","severity":1,"message":"134","line":4,"column":8,"nodeType":"125","messageId":"126","endLine":4,"endColumn":13},{"ruleId":"123","severity":1,"message":"135","line":4,"column":10,"nodeType":"125","messageId":"126","endLine":4,"endColumn":17},{"ruleId":"136","severity":1,"message":"137","line":141,"column":34,"nodeType":"138","messageId":"139","endLine":141,"endColumn":36},{"ruleId":"136","severity":1,"message":"137","line":148,"column":33,"nodeType":"138","messageId":"139","endLine":148,"endColumn":35},{"ruleId":"136","severity":1,"message":"137","line":153,"column":34,"nodeType":"138","messageId":"139","endLine":153,"endColumn":36},{"ruleId":"136","severity":1,"message":"137","line":160,"column":31,"nodeType":"138","messageId":"139","endLine":160,"endColumn":33},{"ruleId":"140","severity":1,"message":"141","line":296,"column":41,"nodeType":"142","endLine":296,"endColumn":88},{"ruleId":"140","severity":1,"message":"141","line":318,"column":41,"nodeType":"142","endLine":318,"endColumn":88},{"ruleId":"140","severity":1,"message":"141","line":341,"column":41,"nodeType":"142","endLine":341,"endColumn":64},{"ruleId":"143","severity":1,"message":"144","line":351,"column":54,"nodeType":"145","endLine":351,"endColumn":78},{"ruleId":"140","severity":1,"message":"141","line":363,"column":41,"nodeType":"142","endLine":363,"endColumn":63},{"ruleId":"123","severity":1,"message":"146","line":9,"column":12,"nodeType":"125","messageId":"126","endLine":9,"endColumn":18},{"ruleId":"147","severity":1,"message":"148","line":38,"column":25,"nodeType":"149","messageId":"139","endLine":38,"endColumn":30},{"ruleId":"123","severity":1,"message":"150","line":3,"column":8,"nodeType":"125","messageId":"126","endLine":3,"endColumn":13},{"ruleId":"136","severity":1,"message":"151","line":76,"column":26,"nodeType":"138","messageId":"139","endLine":76,"endColumn":28},{"ruleId":"136","severity":1,"message":"151","line":96,"column":26,"nodeType":"138","messageId":"139","endLine":96,"endColumn":28},{"ruleId":"136","severity":1,"message":"151","line":119,"column":26,"nodeType":"138","messageId":"139","endLine":119,"endColumn":28},{"ruleId":"136","severity":1,"message":"151","line":139,"column":26,"nodeType":"138","messageId":"139","endLine":139,"endColumn":28},{"ruleId":"123","severity":1,"message":"152","line":21,"column":9,"nodeType":"125","messageId":"126","endLine":21,"endColumn":12},{"ruleId":"136","severity":1,"message":"151","line":23,"column":26,"nodeType":"138","messageId":"139","endLine":23,"endColumn":28},{"ruleId":"123","severity":1,"message":"153","line":42,"column":16,"nodeType":"125","messageId":"126","endLine":42,"endColumn":17},{"ruleId":"123","severity":1,"message":"154","line":44,"column":16,"nodeType":"125","messageId":"126","endLine":44,"endColumn":17},{"ruleId":"136","severity":1,"message":"151","line":62,"column":26,"nodeType":"138","messageId":"139","endLine":62,"endColumn":28},{"ruleId":"136","severity":1,"message":"151","line":82,"column":26,"nodeType":"138","messageId":"139","endLine":82,"endColumn":28},"no-native-reassign",["155"],"no-negated-in-lhs",["156"],"no-unused-vars","'FusionChart' is defined but never used.","Identifier","unusedVar","'NewChart' is defined but never used.","'ChartT' is defined but never used.","'BarT' is defined but never used.","'Menu' is defined but never used.","'UpdatedData' is assigned a value but never used.","'Fasion2' is defined but never used.","'moment' is defined but never used.","'react' is defined but never used.","'connect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'sumAll' is assigned a value but never used.","no-dupe-keys","Duplicate key 'value'.","ObjectExpression","'Chart' is defined but never used.","Expected '!==' and instead saw '!='.","'jwt' is assigned a value but never used.","'m' is assigned a value but never used.","'d' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]