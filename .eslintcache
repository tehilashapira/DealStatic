[{"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\index.js":"1","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\App.js":"2","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\staticStore.js":"4","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\ChartT.js":"5","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\BarT.js":"6","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\NewChart.js":"7","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\FusionChart.js":"8","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\InformationTemp.js":"9","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Chart2.js":"10","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\TotalChart.js":"11","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Fasion2.js":"12","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js":"13","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js":"14","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\actions\\staticAction.js":"15","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js":"16","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\reducerDay.js":"17","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Circle.js":"18"},{"size":517,"mtime":1613380935982,"results":"19","hashOfConfig":"20"},{"size":652,"mtime":1614246467327,"results":"21","hashOfConfig":"20"},{"size":375,"mtime":1613380935982,"results":"22","hashOfConfig":"20"},{"size":533,"mtime":1614114929677,"results":"23","hashOfConfig":"20"},{"size":2880,"mtime":1614263998874,"results":"24","hashOfConfig":"20"},{"size":3217,"mtime":1614456658014,"results":"25","hashOfConfig":"20"},{"size":2123,"mtime":1613916364112,"results":"26","hashOfConfig":"20"},{"size":2784,"mtime":1614074208456,"results":"27","hashOfConfig":"20"},{"size":19716,"mtime":1614456201340,"results":"28","hashOfConfig":"20"},{"size":827,"mtime":1614178333600,"results":"29","hashOfConfig":"20"},{"size":2551,"mtime":1614263330391,"results":"30","hashOfConfig":"20"},{"size":1995,"mtime":1613635501579,"results":"31","hashOfConfig":"20"},{"size":4787,"mtime":1614114852393,"results":"32","hashOfConfig":"20"},{"size":5044,"mtime":1614114728235,"results":"33","hashOfConfig":"20"},{"size":478,"mtime":1613380935966,"results":"34","hashOfConfig":"20"},{"size":1164,"mtime":1613380935974,"results":"35","hashOfConfig":"20"},{"size":3173,"mtime":1614117327765,"results":"36","hashOfConfig":"20"},{"size":4730,"mtime":1614246482127,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"vdlxqy",{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"40"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"40"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"56"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"40"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"56"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"40"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"40"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"40"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\index.js",[],["85","86"],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\App.js",["87"],"import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/staticStore'\r\nimport InformationTemp from './components/InformationTemp'\r\nimport Chart2 from './components/Chart2'\r\nimport Circle from './components/Circle'\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <div className=\"container-fluid \">\r\n        <Provider store={store}>\r\n          <InformationTemp></InformationTemp>\r\n          {/* <div style={{ marginLeft: \"40px\", height: \"10\" }}>\r\n            <Circle ></Circle>\r\n          </div> */}\r\n          <Chart2></Chart2>\r\n        </Provider>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\staticStore.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\ChartT.js",["88"],"import React from 'react';\r\nimport moment from 'moment';\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function ApexChart() {\r\n  const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n\r\n\r\n\r\n  const state = {\r\n    series: [\r\n\r\n      {\r\n        name: \"contacts\",\r\n        data: [UpdatedData.contacts[1], UpdatedData.contacts[2], UpdatedData.contacts[3], UpdatedData.contacts[4], UpdatedData.contacts[5], UpdatedData.contacts[6], UpdatedData.contacts[7], UpdatedData.contacts[8], UpdatedData.contacts[9], UpdatedData.contacts[10], UpdatedData.contacts[11], UpdatedData.contacts[12]]\r\n      },\r\n      {\r\n        name: \"papers\",\r\n        data: [UpdatedData.papers[1], UpdatedData.papers[2], UpdatedData.papers[3], UpdatedData.papers[4], UpdatedData.papers[5], UpdatedData.papers[6], UpdatedData.papers[7], UpdatedData.papers[8], UpdatedData.papers[9], UpdatedData.papers[10], UpdatedData.papers[11], UpdatedData.papers[12]]\r\n      },\r\n\r\n      {\r\n        name: \"projects\",\r\n        data: [UpdatedData.projects[1], UpdatedData.projects[2], UpdatedData.projects[3], UpdatedData.projects[4], UpdatedData.projects[5], UpdatedData.projects[6], UpdatedData.projects[7], UpdatedData.projects[8], UpdatedData.projects[9], UpdatedData.projects[10], UpdatedData.projects[11], UpdatedData.projects[12]]\r\n      },\r\n      {\r\n        name: \"tasks\",\r\n        data: [UpdatedData.tasks[1], UpdatedData.tasks[2], UpdatedData.tasks[3], UpdatedData.tasks[4], UpdatedData.tasks[5], UpdatedData.tasks[6], UpdatedData.tasks[7], UpdatedData.tasks[8], UpdatedData.tasks[9], UpdatedData.tasks[10], UpdatedData.tasks[11], UpdatedData.tasks[12]]\r\n      }\r\n\r\n    ],\r\n    options: {\r\n      legend: {\r\n        show:false,\r\n      },\r\n      scales: {\r\n      },\r\n      colors: [' rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgba(255, 69, 96, 0.85)'],\r\n      chart: {\r\n        background: '#f8f9fa',\r\n        zoom: { enabled: false },\r\n        height: 350,\r\n        type: \"line\",\r\n        stacked: false,\r\n        toolbar: {\r\n          show: false\r\n        }\r\n      },\r\n      dataLabels: {\r\n        enabled: false\r\n      },\r\n      // colors: [' rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgb(253, 81, 219)'],\r\n      grid: {\r\n        show: false,\r\n        borderColor: '#90A4AE',\r\n        strokeDashArray: 0,\r\n        position: 'back',\r\n        xaxis: {\r\n          lines: {\r\n            show: false\r\n          }\r\n        },\r\n      },\r\n      stroke: {\r\n        curve: 'smooth',\r\n        width: 3,\r\n      },\r\n      xaxis: {\r\n        categories: ['Jan', 'feb', 'marth', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dic'],\r\n      },\r\n    },\r\n  };\r\n  return (\r\n    <div id=\"chart\">\r\n      <ReactApexChart options={state.options} series={state.series} type=\"line\" width={420} />\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\BarT.js",["89"],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\NewChart.js",["90"],"import React, { useRef, useLayoutEffect } from 'react';\r\nimport { useSelector } from 'react-redux'\r\n\r\nimport * as am4core from \"@amcharts/amcharts4/core\";\r\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\r\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\r\n\r\nam4core.useTheme(am4themes_animated);\r\n\r\nexport default function App(props) {\r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n\r\n    const chart = useRef(null);\r\n\r\n    useLayoutEffect(() => {\r\n        let x = am4core.create(\"chartdiv\", am4charts.XYChart);\r\n\r\n        x.paddingRight = 20;\r\n        //    let data= [\r\n        //         UpdatedData.leaderStatic.sumContacts,\r\n        //         UpdatedData.leaderStatic.sumPapers,\r\n        //         UpdatedData.leaderStatic.sumProjects,\r\n        //         UpdatedData.leaderStatic.sumTasks,\r\n        //     ]\r\n        let data = []\r\n        let visits = 10;\r\n\r\n        for (let i = 1; i < 366; i++) {\r\n            visits += Math.round((Math.random() < 0.5 ? 1 : -1) * Math.random() * 10);\r\n            data.push({ date: new Date(2018, 0, i), name: \"name\" + i, value: visits });\r\n        }\r\n\r\n        x.data = data;\r\n\r\n        let dateAxis = x.xAxes.push(new am4charts.DateAxis());\r\n        dateAxis.renderer.grid.template.location = 0;\r\n        // let dateAxis =[\"contact\",\"papers\",\"projects\",\"tasks\"]\r\n\r\n        let valueAxis = x.yAxes.push(new am4charts.ValueAxis());\r\n        valueAxis.tooltip.disabled = true;\r\n        valueAxis.renderer.minWidth = 35;\r\n\r\n        let series = x.series.push(new am4charts.LineSeries());\r\n        series.dataFields.dateX = \"date\";\r\n        series.dataFields.valueY = \"value\";\r\n        series.tooltipText = \"{valueY.value}\";\r\n        x.cursor = new am4charts.XYCursor();\r\n\r\n        let scrollbarX = new am4charts.XYChartScrollbar();\r\n        scrollbarX.series.push(series);\r\n        x.scrollbarX = scrollbarX;\r\n\r\n        chart.current = x;\r\n\r\n        return () => {\r\n            x.dispose();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div id=\"chartdiv\" style={{ width: \"100%\", height: \"500px\" }}></div>\r\n    );\r\n}\r\n",["91","92"],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\FusionChart.js",["93"],"\r\nimport React from \"react\";\r\nimport FusionCharts from \"fusioncharts\";\r\nimport charts from \"fusioncharts/fusioncharts.charts\";\r\nimport ReactFusioncharts from \"react-fusioncharts\";\r\nimport Fasion2 from './Fasion2'\r\nimport TotalChart from './TotalChart'\r\nimport { useSelector } from 'react-redux'\r\n\r\ncharts(FusionCharts);\r\n\r\nexport default function MyComponent() {\r\n    // colors: [' rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgb(253, 81, 219)'],\r\n\r\n    const rgbToHex = (r, g, b) => '#' + [r, g, b].map(x => {\r\n        const hex = x.toString(16)\r\n        return hex.length === 1 ? '0' + hex : hex\r\n    }).join('')\r\n    //    \r\n    console.log(rgbToHex(247, 181, 0)); // '#f7b500'\r\n    console.log(rgbToHex(1, 220, 209)); // \"#01dcd1\"\r\n    console.log(rgbToHex(103, 114, 222)); // \"#6772de\"\r\n    console.log(rgbToHex(253, 81, 219)); // \"#fd51db\"\r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n    const dataSource = {\r\n        type: 'column3d',\r\n        // renderAt: 'chart-container',\r\n        width: '700',\r\n        height: '250',\r\n        // dataFormat: 'json',\r\n        \"theme\": \" \",\r\n        dataSource: {\r\n            \"chart\": {\r\n                bgColor: \"#ff0000\",\r\n                canvasBgColor: \"#ff0000\",\r\n                // \"bgImage\": \"https://upload.wikimedia.org/wikipedia/commons/7/79/Misc_fruit.jpg\"\r\n            },\r\n        },\r\n        fill: {\r\n            type: 'image',\r\n            image: {\r\n                src: ['https://upload.wikimedia.org/wikipedia/commons/7/79/Misc_fruit.jpg'],\r\n                width: undefined,  // optional\r\n                height: undefined  //optional\r\n            }\r\n        },\r\n        data: [\r\n            {\r\n                label: \"contacts\",\r\n                value: UpdatedData.leaderStatic.sumContacts,\r\n                \"color\": '#f7b500',\r\n\r\n            },\r\n            {\r\n                label: \"papers\",\r\n                value: UpdatedData.leaderStatic.sumPapers,\r\n                \"color\": \"#01dcd1\"\r\n            },\r\n            {\r\n                label: \"projects\",\r\n                value: UpdatedData.leaderStatic.sumProjects,\r\n                \"color\": \"#6772de\"\r\n\r\n\r\n            },\r\n            {\r\n                label: \"tasks\",\r\n                value: UpdatedData.leaderStatic.sumTasks,\r\n                \"color\": \"#fd51db\"\r\n\r\n            }\r\n\r\n\r\n        ]\r\n    };\r\n\r\n    return (\r\n        <>\r\n\r\n            <div id=\"c\">\r\n                <ReactFusioncharts\r\n                    type=\"column3d\"\r\n                    width=\"40%\"\r\n                    height=\"\r\n                210%\"\r\n                    dataSource={dataSource}\r\n                />\r\n                {/* <Fasion2></Fasion2> */}\r\n                <TotalChart></TotalChart>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\InformationTemp.js",["94","95","96","97","98","99","100","101","102","103"],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Chart2.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\TotalChart.js",["104","105"],"import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport { useSelector } from 'react-redux'\r\n\r\nexport default function ApexChart() {\r\n  \r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n    debugger\r\n    const  sumAll=(UpdatedData.leaderStatic.sumContacts+\r\n        UpdatedData.leaderStatic.sumPapers+\r\n        UpdatedData.leaderStatic.sumProjects+\r\n        UpdatedData.leaderStatic.sumTasks)\r\n    const state = {\r\n       \r\n        series: [UpdatedData.leaderStatic.sumContacts,\r\n        UpdatedData.leaderStatic.sumPapers,\r\n        UpdatedData.leaderStatic.sumProjects,\r\n        UpdatedData.leaderStatic.sumTasks],\r\n        options: {\r\n\r\n            chart: {\r\n                height: 350,\r\n                type: 'radialBar',\r\n                background: '#f8f9fa'\r\n            },\r\n            colors :[' rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgba(255, 69, 96, 0.85)']\r\n\r\n            ,plotOptions: {\r\n                radialBar: {\r\n                    dataLabels: {\r\n                        name: {\r\n                            fontSize: '22px',\r\n                        },\r\n                        value: {\r\n                            fontSize: '16px',\r\n                        },\r\n                        \r\n                        value: {\r\n                            show: true,\r\n                            fontSize: '14px',\r\n                            fontFamily: undefined,\r\n                            fontWeight: 400,\r\n                            color: undefined,\r\n                            offsetY: 16,\r\n                            formatter: function (val) {\r\n                              return val \r\n                            }\r\n                          },\r\n                          total: {\r\n                            show: true,\r\n                            label: 'Total',\r\n                            formatter:function (w) {\r\n                                return w.globals.seriesTotals.reduce((a, b) => {\r\n                                  return a + b\r\n                                }, 0)\r\n                              }\r\n                            \r\n                        },\r\n                    }\r\n                }\r\n            },\r\n            labels: ['contacts', 'papers', 'projects ', 'tasks'],\r\n        },\r\n\r\n\r\n    };\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"col-md-2\" id=\"chart\">\r\n            <ReactApexChart options={state.options} series={state.series} type=\"radialBar\" height={270} width={270} />\r\n        </div>\r\n    )\r\n}","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Fasion2.js",["106"],"import React from 'react';\r\nimport ReactApexChart from 'react-apexcharts'\r\nimport Chart from \"react-apexcharts\";\r\nimport { useSelector } from 'react-redux';\r\n\r\n\r\nexport default function ApexChart () {\r\n    \r\n    const UpdatedData = useSelector(state => state.staticDetailsReducer);\r\n        const state = {\r\n\r\n            series: [UpdatedData.leaderStatic.sumContacts,\r\n                UpdatedData.leaderStatic.sumPapers,\r\n                UpdatedData.leaderStatic.sumProjects,\r\n                UpdatedData.leaderStatic.sumTasks],\r\n               \r\n            options: {\r\n                chart: {\r\n                    width: 380,\r\n                    type: 'polarArea'\r\n                },\r\n                labels: ['contacts', 'papers', 'projects ', 'tasks'],\r\n                fill: {\r\n                    opacity: 1\r\n                },\r\n                stroke: {\r\n                    width: 1,\r\n                    colors: undefined\r\n                },\r\n                yaxis: {\r\n                    show: false\r\n                },\r\n                legend: {\r\n                    position: 'bottom'\r\n                },\r\n                colors: ['rgb(247, 181, 0)', 'rgb(1, 220, 209)', 'rgb(103, 114, 222)', 'rgb(253, 81, 219)'],\r\n                \r\n                // plotOptions: {\r\n                //     polarArea: {\r\n                //         rings: {\r\n                //             strokeWidth: 0\r\n                //         }\r\n                //     }\r\n                // },\r\n                // theme: {\r\n                //     monochrome: {\r\n                //         // enabled: true,\r\n                //         // shadeTo: 'light',\r\n                //         // shadeIntensity: 0.6\r\n                //     }\r\n                // }\r\n            },\r\n\r\n\r\n        };\r\n    \r\n\r\n\r\n\r\n   \r\n        return (\r\n\r\n\r\n            <div id=\"chart\">\r\n                <ReactApexChart options={state.options} series={state.series} type=\"polarArea\" width={380} />\r\n            </div>\r\n        )\r\n    }\r\n","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js",["107"],"import { actions } from '../actions/staticAction'\r\n\r\n// ---------------A function that extracts the jwt from the cookies----------------\r\nexport const getCookie = (c_name) => {\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + '=');\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(';', c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return '';\r\n};\r\nexport const getStaticData = ({ dispatch, getState }) => next => action => {\r\n  // with this type client enter to application:INIT_DATA\r\n  if (action.type === 'INIT_DATA') {\r\n    let jwt = getCookie('jwt');\r\n    //  fetch to get sum of projects for user-----------------\r\n    fetch('https://reacthub.dev.leader.codes/api/renana-il/getAllProjectsForUser', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJIZXNJaFlXaVU2Z1A3M1NkMHRXaDJZVzA4ZFkyIiwiZW1haWwiOiJyZW5hbmFAbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjA3NTkxOTI5fQ.U2FQ7I4qBXW9DF-SVJqxKiWgVs5tjSo06pyvmuwzCFU\",\r\n        //    Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n\r\n        //all data for project\r\n        let projectData = data.userProjectsList\r\n        //only sumProject\r\n        if (projectData != null) {\r\n          let sumProject = data.countProjectsForUser\r\n          dispatch(actions.setProjectStatic(sumProject));\r\n          dispatch(actions.setProjectData(projectData));\r\n          dispatch(actions.setProjectChart(projectData));\r\n          dispatch(actions.ProjectChartDay(projectData));\r\n          debugger\r\n          console.log(data)\r\n        }\r\n      })\r\n    // fetch to get sum tasks for user-------------\r\n    fetch('https://reacthub.dev.leader.codes/api/renana-il/getAllTasksForUser', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJIZXNJaFlXaVU2Z1A3M1NkMHRXaDJZVzA4ZFkyIiwiZW1haWwiOiJyZW5hbmFAbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjA3NTkxOTI5fQ.U2FQ7I4qBXW9DF-SVJqxKiWgVs5tjSo06pyvmuwzCFU\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        //all data for project\r\n        let taskData = data.userTasksList\r\n        //only sumTask\r\n        if (taskData != null) {\r\n          let sumTask = (data.countTasksForUser)\r\n          dispatch(actions.setTaskStatic(sumTask));\r\n          dispatch(actions.setTaskData(taskData));\r\n          dispatch(actions.setTaskChart(taskData));\r\n          console.log(data)\r\n        }\r\n      })\r\n    //  fetch to get sum of papers for user-----------------\r\n    fetch('https://papers.dev.leader.codes/api/ruth109476@gmail.com/getAllQuote', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJEWWMzVlVtRUhTY3FhWkJ3MzAwbHY4OWZuYTgyIiwiZW1haWwiOiJydXRoMTA5NDc2QGdtYWlsLmNvbSIsImlhdCI6MTYxMTcyNjEzN30.sDgXmAvDj3JirPgU5AksbPVMdtxHVIAU9rgTFAeAluE\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        // let sumPapers = (data.quotes.length)\r\n        if (data.quotes != null) {\r\n\r\n          let sumPapers = (data.quotes.length)\r\n          let d = data.quotes\r\n          dispatch(actions.setPaperStatic(sumPapers));\r\n          dispatch(actions.setPaperData(d));\r\n          dispatch(actions.setPaperChart(d));\r\n          console.log(data)\r\n        }\r\n      })\r\n    // fetch to get sum of contacts for user----------------------\r\n    fetch('https://api.dev.leader.codes/blabla101/getContacts/?includesConversations=false', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJzaW1kc01ycmNKZHBRZ3RhOGtnWHlRQmRERnkyIiwiZW1haWwiOiJjdG9AbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjEwNDM3MDcxfQ.vn3nemrfKrW2TKQqwtkIoyaRZRjS8JBEhTtmIWzdc04\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((dataContact) => {\r\n        //all data for contact\r\n        let contactData = dataContact\r\n        //only sumContact\r\n        if (contactData != null) {\r\n\r\n          let sumContact = (dataContact.length)\r\n\r\n          dispatch(actions.setContactStatic(sumContact));\r\n          dispatch(actions.setContactData(contactData));\r\n          dispatch(actions.setContactChart(contactData));\r\n          console.log(contactData)\r\n        }\r\n      })\r\n  }\r\n  return next(action)\r\n}","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js",["108","109","110","111"],"import produce from 'immer';\r\nimport { createReducer } from \"./reducerUtils\";\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    leaderStatic: { sumProjects: 0, sumTasks: 0, sumPapers: 0, sumContacts: 0 },\r\n    dataStatic: [],\r\n    sumStatic: { viewer: 0, contactOptions: 0, submitioms: 0 },\r\n    AllProject: [],\r\n    AllTask: [],\r\n    AllContact: [],\r\n    AllPapers: [],\r\n    isClicked: 0,\r\n\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n\r\n};\r\n\r\nconst staticData = {\r\n\r\n    //  setStaticData(state, action) {\r\n    //      \r\n    // //   state.sumStatic=action.payload.viewers.map((viewer) =>new Date(viewer.data))\r\n    //     state.dataStatic=action.payload;\r\n    //      \r\n    //     state.sumStatic.viewer=sumData(state.dataStatic.viewers);\r\n    //      \r\n    //     state.sumStatic.contactOptions=sumData(state.dataStatic.contactOptions);\r\n    //     state.sumStatic.submitioms=sumData(state.dataStatic.submitioms);\r\n    //      \r\n\r\n    // },\r\n\r\n    setSumStatic(state, action) {\r\n        state.AllProject = (action.payload);\r\n        // state.sumStatic.contactOptions=sumData(action.payload.contactOptions);\r\n        // state.sumStatic.submitioms=sumData(action.payload.submitioms);  \r\n    },\r\n    setProjectStatic(state, action) {\r\n        state.leaderStatic.sumProjects = action.payload\r\n    },\r\n    setProjectData(state, action) {\r\n\r\n        state.AllProject = action.payload\r\n    },\r\n    setTaskStatic(state, action) {\r\n        state.leaderStatic.sumTasks = action.payload\r\n\r\n    },\r\n    setTaskData(state, action) {\r\n\r\n        state.AllTask = action.payload\r\n    },\r\n    setTaskChart(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        console.log(initialState.tasks)\r\n        const arr = [...state.tasks];\r\n        for (let i = 0; i < 9; i++) {\r\n            const date1 = allData[i].startDate.split(\"/\")\r\n            let date2 = date1[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.tasks = [...arr];\r\n        console.log(state.tasks)\r\n    },\r\n    setProjectChart(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        const arr = [...state.projects];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].dueDate.split(\"/\")\r\n            let date2 = date1[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.projects = [...arr];\r\n        console.log(state.projects)\r\n    },\r\n    setPaperChart(state = initialState, action) {\r\n        let allData = action.payload\r\n        console.log(initialState.papers)\r\n        const arr = [...state.papers];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createdDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.papers = [...arr];\r\n    },\r\n    setContactChart(state = initialState, action) {\r\n        let allData = action.payload\r\n        console.log(initialState.contacts)\r\n        const arr = [...state.contacts];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createDateAndTime\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.contacts = [...arr];\r\n    },\r\n    setPaperStatic(state, action) {\r\n        state.leaderStatic.sumPapers = action.payload\r\n    },\r\n    setContactStatic(state, action) {\r\n        state.leaderStatic.sumContacts = action.payload\r\n    },\r\n    setContactData(state, action) {\r\n        state.AllContact = action.payload\r\n    }, setPaperData(state, action) {\r\n        state.AllPapers = action.payload\r\n    },\r\n    ClickFilter(state, action) {\r\n        state.isClicked = action.payload\r\n    }\r\n};\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\actions\\staticAction.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js",[],"C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\Redux\\reducers\\reducerDay.js",["112","113","114","115","116"],"import produce from 'immer';\r\nimport { createReducer } from \"./reducerUtils\";\r\nimport moment from 'moment';\r\n\r\nconst initialState = {\r\n    papers: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    projects: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    tasks: [0, 0, 0, 0, 0, 0, 0, 0],\r\n    contacts: [0, 0, 0, 0, 0, 0, 0, 0]\r\n\r\n}\r\n\r\nconst staticData = {\r\n    TaskChartDay(state = initialState, action) {\r\n\r\n        let allData = action.payload\r\n        console.log(initialState.tasks)\r\n        const arr = [...state.tasks];\r\n        for (let i = 0; i < arr.length; i++) {\r\n\r\n            const date1 = allData[i].startDate.split(\"/\")\r\n            let date2 = date1[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.tasks = [...arr];\r\n        console.log(state.tasks)\r\n    },\r\n    ProjectChartDay(state = initialState, action) {\r\n        debugger\r\n        let allData = action.payload\r\n        const arr = [...state.projects];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            let day = allData[i].dueDate\r\n           let m= moment(day).weekday()\r\n            console.log(moment().isoWeekday())\r\n           let d= moment(day).isoWeekday()\r\n            const date = moment(day); // Thursday Feb 2015\r\n            debugger\r\n            const dow = date.day();\r\n            const x = (arr[dow]) + 1\r\n            arr[dow] = x;\r\n        }\r\n        state.projects = [...arr];\r\n        console.log(state.projects)\r\n    },\r\n    PaperChartDay(state = initialState, action) {\r\n        let allData = action.payload\r\n        console.log(initialState.papers)\r\n        const arr = [...state.papers];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createdDate\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[1]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.papers = [...arr];\r\n    },\r\n    ContactChartDay(state = initialState, action) {\r\n        let allData = action.payload\r\n        console.log(initialState.contacts)\r\n        const arr = [...state.contacts];\r\n        for (let i = 0; i < allData.length; i++) {\r\n            const date1 = allData[i].createDateAndTime\r\n            let date11 = moment(date1).format(\"MM/DD/YYYY\").split(\"/\")\r\n            let date2 = date11[0]\r\n            if (date2[0] != 0) {\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n            else {\r\n                date2 = date2[1]\r\n                const x = (arr[date2]) + 1\r\n                arr[date2] = x;\r\n            }\r\n        }\r\n        state.contacts = [...arr];\r\n    },\r\n};\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Desktop\\leader2\\LeaderStatic\\src\\components\\Circle.js",[],{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","severity":1,"message":"122","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":14},{"ruleId":"121","severity":1,"message":"125","line":2,"column":8,"nodeType":"123","messageId":"124","endLine":2,"endColumn":14},{"ruleId":"121","severity":1,"message":"126","line":4,"column":8,"nodeType":"123","messageId":"124","endLine":4,"endColumn":13},{"ruleId":"121","severity":1,"message":"127","line":11,"column":11,"nodeType":"123","messageId":"124","endLine":11,"endColumn":22},{"ruleId":"117","replacedBy":"128"},{"ruleId":"119","replacedBy":"129"},{"ruleId":"121","severity":1,"message":"130","line":6,"column":8,"nodeType":"123","messageId":"124","endLine":6,"endColumn":15},{"ruleId":"121","severity":1,"message":"131","line":4,"column":10,"nodeType":"123","messageId":"124","endLine":4,"endColumn":17},{"ruleId":"132","severity":1,"message":"133","line":133,"column":34,"nodeType":"134","messageId":"135","endLine":133,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":140,"column":33,"nodeType":"134","messageId":"135","endLine":140,"endColumn":35},{"ruleId":"132","severity":1,"message":"133","line":145,"column":34,"nodeType":"134","messageId":"135","endLine":145,"endColumn":36},{"ruleId":"132","severity":1,"message":"133","line":152,"column":31,"nodeType":"134","messageId":"135","endLine":152,"endColumn":33},{"ruleId":"136","severity":1,"message":"137","line":287,"column":41,"nodeType":"138","endLine":287,"endColumn":88},{"ruleId":"136","severity":1,"message":"137","line":309,"column":41,"nodeType":"138","endLine":309,"endColumn":88},{"ruleId":"136","severity":1,"message":"137","line":332,"column":41,"nodeType":"138","endLine":332,"endColumn":64},{"ruleId":"139","severity":1,"message":"140","line":342,"column":54,"nodeType":"141","endLine":342,"endColumn":78},{"ruleId":"136","severity":1,"message":"137","line":354,"column":41,"nodeType":"138","endLine":354,"endColumn":63},{"ruleId":"121","severity":1,"message":"142","line":9,"column":12,"nodeType":"123","messageId":"124","endLine":9,"endColumn":18},{"ruleId":"143","severity":1,"message":"144","line":38,"column":25,"nodeType":"145","messageId":"135","endLine":38,"endColumn":30},{"ruleId":"121","severity":1,"message":"146","line":3,"column":8,"nodeType":"123","messageId":"124","endLine":3,"endColumn":13},{"ruleId":"121","severity":1,"message":"147","line":21,"column":9,"nodeType":"123","messageId":"124","endLine":21,"endColumn":12},{"ruleId":"132","severity":1,"message":"148","line":66,"column":26,"nodeType":"134","messageId":"135","endLine":66,"endColumn":28},{"ruleId":"132","severity":1,"message":"148","line":86,"column":26,"nodeType":"134","messageId":"135","endLine":86,"endColumn":28},{"ruleId":"132","severity":1,"message":"148","line":107,"column":26,"nodeType":"134","messageId":"135","endLine":107,"endColumn":28},{"ruleId":"132","severity":1,"message":"148","line":127,"column":26,"nodeType":"134","messageId":"135","endLine":127,"endColumn":28},{"ruleId":"132","severity":1,"message":"148","line":23,"column":26,"nodeType":"134","messageId":"135","endLine":23,"endColumn":28},{"ruleId":"121","severity":1,"message":"149","line":42,"column":16,"nodeType":"123","messageId":"124","endLine":42,"endColumn":17},{"ruleId":"121","severity":1,"message":"150","line":44,"column":16,"nodeType":"123","messageId":"124","endLine":44,"endColumn":17},{"ruleId":"132","severity":1,"message":"148","line":62,"column":26,"nodeType":"134","messageId":"135","endLine":62,"endColumn":28},{"ruleId":"132","severity":1,"message":"148","line":82,"column":26,"nodeType":"134","messageId":"135","endLine":82,"endColumn":28},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"no-unused-vars","'Circle' is defined but never used.","Identifier","unusedVar","'moment' is defined but never used.","'react' is defined but never used.","'UpdatedData' is assigned a value but never used.",["151"],["152"],"'Fasion2' is defined but never used.","'connect' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'sumAll' is assigned a value but never used.","no-dupe-keys","Duplicate key 'value'.","ObjectExpression","'Chart' is defined but never used.","'jwt' is assigned a value but never used.","Expected '!==' and instead saw '!='.","'m' is assigned a value but never used.","'d' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]