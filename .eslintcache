[{"C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\index.js":"1","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\App.js":"2","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\reportWebVitals.js":"3","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\components\\InformationTemp.js":"4","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\components\\Chart2.js":"5","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\staticStore.js":"6","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\actions\\staticAction.js":"7","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js":"8","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js":"9","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js":"10","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\components\\TryChart.js":"11"},{"size":517,"mtime":1612250684088,"results":"12","hashOfConfig":"13"},{"size":729,"mtime":1612707256733,"results":"14","hashOfConfig":"13"},{"size":375,"mtime":1612250684088,"results":"15","hashOfConfig":"13"},{"size":17230,"mtime":1612726633297,"results":"16","hashOfConfig":"13"},{"size":6118,"mtime":1612707612946,"results":"17","hashOfConfig":"13"},{"size":468,"mtime":1612250684076,"results":"18","hashOfConfig":"13"},{"size":478,"mtime":1612250684072,"results":"19","hashOfConfig":"13"},{"size":4268,"mtime":1612726606950,"results":"20","hashOfConfig":"13"},{"size":1893,"mtime":1612726989993,"results":"21","hashOfConfig":"13"},{"size":1105,"mtime":1612446851691,"results":"22","hashOfConfig":"13"},{"size":3342,"mtime":1612697630486,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1py0hf9",{"filePath":"27","messages":"28","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"26"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\index.js",[],["52","53"],"C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\App.js",["54","55","56","57"],"import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport store from './Redux/staticStore'\r\nimport InformationTemp from './components/InformationTemp'\r\nimport Chart2 from './components/Chart2'\r\nimport TryC from './components/TryChart'\r\nimport { BrowserRouter as Router, Switch, Route, useParams } from 'react-router-dom'\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"container-fluid \">\r\n      <Router>\r\n        {/* <Route path=\"/home\"><Link to=\"/home\"></Link></Route> */}\r\n        <Provider store={store}>\r\n          <InformationTemp></InformationTemp>\r\n          <Chart2></Chart2>\r\n      {/* <TryC></TryC> */}\r\n        </Provider>\r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\reportWebVitals.js",[],"C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\components\\InformationTemp.js",["58","59","60","61","62","63","64","65","66","67"],"import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport './InformationTemp.css';\r\nimport { connect } from 'react-redux';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport iconOne from '../img/iconOne.png'\r\nimport iconTwo from '../img/iconTwo.png';\r\nimport iconThree from '../img/iconThree.png'\r\nimport iconFour from '../img/iconFour.png'\r\nimport { actions } from '../Redux/actions/staticAction'\r\nimport moment from 'moment';\r\nimport { } from 'react-router-dom'\r\n\r\n\r\n// -------get new date in correct format to filter data----------------------------------------------------\r\n\r\nlet currentDate = moment().format(\"MM/DD/YYYY\");\r\nlet dateBeforeWeek = moment().subtract(1, 'week').format('MM/DD/YYYY');\r\nlet dateBeforeMonth = moment().subtract(1, 'month').format('MM/DD/YYYY');\r\nlet dateBeforeYear = moment().subtract(1, 'year').format('MM/DD/YYYY')\r\n// --------------------------------------------------------------------------------------------------------------\r\nconst useStyles = () => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: 360,\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n    paper: {\r\n        borderRadius: '17px',\r\n        background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)'\r\n    },\r\n})\r\nfunction Information(props) {\r\n    //  ---filter by: last day,last week,last month,year\r\n    function filterByDay() {\r\n\r\n        let AllTaskData = (props.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (dateFormater == currentDate)\r\n\r\n        })\r\n\r\n        let AllContactData = (props.AllContact).filter(function (AllContact) {\r\n            const dateContact = (AllContact.createDateAndTime).substring(0, 10)\r\n            console.log(dateContact)\r\n            const correctDate = dateContact.replace(/-/g, '/');\r\n            console.log(correctDate)\r\n            const dateC = correctDate.split(\"/\")\r\n            const dateFormater = dateC[1] + \"/\" + dateC[2] + \"/\" + dateC[0];\r\n            return (dateFormater == currentDate)\r\n        })\r\n        let AllProjectData = (props.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (dateFormater == currentDate)\r\n        })\r\n        let AllPapersData = (props.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (detaPaper == currentDate)\r\n        })\r\n        props.dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        props.dispatch(actions.setContactStatic(AllContactData.length))\r\n        props.dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        props.dispatch(actions.setPaperStatic(AllPapersData.length));\r\n\r\n    }\r\n    function filterByYear() {\r\n        let AllProjectData = (props.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllPapersData = (props.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllTaskData = (props.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        let AllContactData = (props.AllContact).filter(function (AllContact) {\r\n            const dateContact = (AllContact.createDateAndTime).substring(0, 10)\r\n            console.log(dateContact)\r\n            const correctDate = dateContact.replace(/-/g, '/');\r\n            console.log(correctDate)\r\n            const dateC = correctDate.split(\"/\")\r\n            const dateFormater = dateC[1] + \"/\" + dateC[2] + \"/\" + dateC[0];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        props.dispatch(actions.setContactStatic(AllContactData.length))\r\n        props.dispatch(actions.setTaskStatic(AllTaskData.length))\r\n        props.dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        props.dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        // props.dispatch(actions.setPaperChart(AllPapersData.createdDate));\r\n    }\r\n\r\n    function filterByWeek() {\r\n        let AllProjectData = (props.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n        })\r\n        let AllPapersData = (props.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n\r\n        let AllTaskData = (props.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeWeek))\r\n\r\n        })\r\n        let AllContactData = (props.AllContact).filter(function (AllContact) {\r\n            const dateContact = (AllContact.createDateAndTime).substring(0, 10)\r\n            console.log(dateContact)\r\n            const correctDate = dateContact.replace(/-/g, '/');\r\n            console.log(correctDate)\r\n            const dateC = correctDate.split(\"/\")\r\n            const dateFormater = dateC[1] + \"/\" + dateC[2] + \"/\" + dateC[0];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeYear))\r\n\r\n        })\r\n        props.dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        props.dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        props.dispatch(actions.setContactStatic(AllContactData.length))\r\n        props.dispatch(actions.setTaskStatic(AllTaskData.length))\r\n    }\r\n    function filterByMonth() {\r\n        let AllProjectData = (props.AllProject).filter(function (AllProject) {\r\n            const dateProject = AllProject.dueDate.split(\"/\")\r\n            const dateFormater = dateProject[1] + \"/\" + dateProject[0] + \"/\" + dateProject[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n        })\r\n        let AllPapersData = (props.AllPapers).filter(function (AllPapers) {\r\n\r\n            const datePaper1 = AllPapers.createdDate\r\n            let detaPaper = moment(datePaper1).format(\"MM/DD/YYYY\");\r\n            // const dateFormater = detaPaper[1] + \"/\" + detaPaper[0] + \"/\" + detaPaper[2];\r\n            return (new Date(detaPaper) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n        let AllTaskData = (props.AllTask).filter(function (AllTask) {\r\n            const dateTask = AllTask.startDate.split(\"/\")\r\n            const dateFormater = dateTask[1] + \"/\" + dateTask[0] + \"/\" + dateTask[2];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n        let AllContactData = (props.AllContact).filter(function (AllContact) {\r\n            const dateContact = (AllContact.createDateAndTime).substring(0, 10)\r\n            console.log(dateContact)\r\n            const correctDate = dateContact.replace(/-/g, '/');\r\n            console.log(correctDate)\r\n            const dateC = correctDate.split(\"/\")\r\n            const dateFormater = dateC[1] + \"/\" + dateC[2] + \"/\" + dateC[0];\r\n            return (new Date(dateFormater) >= new Date(dateBeforeMonth))\r\n\r\n        })\r\n\r\n        props.dispatch(actions.setProjectStatic(AllProjectData.length));\r\n        props.dispatch(actions.setPaperStatic(AllPapersData.length));\r\n        props.dispatch(actions.setContactStatic(AllContactData.length))\r\n        props.dispatch(actions.setTaskStatic(AllTaskData.length))\r\n    }\r\n    return (\r\n        <div className=\"container-fluid mt-5\">\r\n            <div className=\"row pb-5\" style={{ marginRight: '12%', marginLeft: '12%' }} >\r\n                <div className=\"col-3 \" style={{ fontSize: \"30px\", font: \"normal normal bold 18px/27px Roboto\", marginBottom: \"15px\" }}>\r\n                    leads information\r\n      </div>\r\n                <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                    <div className=\"col-3.5\" style={{ direction: \"rtl\" }}>\r\n                    </div></div>‏\r\n             <Grid container spacing={4}>\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className=\"paperOne\" style={{ cursor: 'pointer', padding: 10, borderRadius: '14px', background: '#FFFDFA', border: '2px Solid #F7B500', color: '#F7B500' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Contacts {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\" >\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5 style={{ fontWeight: 'bolder' }}>\r\n                                            {props.leaderStatic.sumContacts ? props.leaderStatic.sumContacts : \"0\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconOne} style={{ height: '50%' }} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px', fontWeight: 'bolder' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} sm={3}>\r\n                        <Paper className=\"paperTwo\" onClick={() => { window.location.assign('https://papers.dev.leader.codes/admin/ruth109476@gmail.com') }} style={{ padding: 10, background: '#ECFAFA', cursor: 'pointer', border: '2px Solid #01DCD1', color: '#01DCD1', borderRadius: '14px' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Papers {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\" >\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5> {props.leaderStatic.sumPapers ? props.leaderStatic.sumPapers : \"0\"}</h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconTwo} style={{ height: '50%' }} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}  >\r\n                        <Paper className=\"paperThree\" style={{ cursor: 'pointer', padding: 10, background: '#F2F3FF', border: '2px Solid #6772DE', color: '#6772DE', borderRadius: '14px' }}>\r\n                            <div className=\"ml-2\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Projects {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div className=\"ml-2\">\r\n                                    <div class=\"col-6 ml-2\">\r\n                                        <h5>\r\n                                            {props.leaderStatic.sumProjects ? props.leaderStatic.sumProjects : \"0\"}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\">\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: ' 0px 0px 20px #00000033' }}>\r\n                                        <img src={iconThree} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={3}  >\r\n                        <Paper className=\"paperFour\" style={{ padding: 10, background: '#FFF5FD', border: '2px Solid #FD51DB', color: '#FD51DB', borderRadius: '14px', cursor: 'pointer' }}>\r\n                            <div className=\"cardFor\" className=\"ml-2 cardFor\" style={{ textAlign: 'start', fontWeight: 'bolder' }}>\r\n                                Total Tasks  {\" \"}\r\n                            </div>\r\n                            <div class=\"row justify-content-between\">\r\n                                <div class=\" ml-2\">\r\n                                    <div className=\" col-6 ml-2\" >\r\n                                        <h5>{props.leaderStatic.sumTasks ? props.leaderStatic.sumTasks : \"0\"}\r\n                                        </h5>\r\n                                    </div>\r\n                                </div>\r\n                                <div class=\"col-4\" >\r\n                                    <Avatar style={{ background: '#FFFFFF', boxShadow: '0px 0px 20px #00000033' }}>\r\n                                        <img src={iconFour} />\r\n                                    </Avatar>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"row\" style={{ margin: '1px' }}>\r\n                            </div>\r\n                        </Paper>\r\n                    </Grid>\r\n                </Grid>\r\n            </div>\r\n            {/* ----------------------------filter by: day ,week, month----------------------------------------------------- */}\r\n            <div>\r\n                <div class=\"row\" style={{ direction: \"rtl\", paddingLeft: \"30%\" }}>\r\n                    ‎\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"520px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByYear}>Year</Button>\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"3px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByMonth}>Month</Button>\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"3px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByWeek}>Week</Button>\r\n                    <Button variant=\"contained\" style={{ background: \"lightslategrey\", marginRight: \"3px\", height: \"20px\", font: \"normal normal 600 14px/66px SF Pro Display\" }} color=\"primary\" onClick={filterByDay}>Day</Button>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n\r\n    return {\r\n        dataStatic: state.staticDetailsReducer.dataStatic,\r\n        sumStatic: state.staticDetailsReducer.sumStatic,\r\n        leaderStatic: state.staticDetailsReducer.leaderStatic,\r\n        AllProject: state.staticDetailsReducer.AllProject,\r\n        AllPapers: state.staticDetailsReducer.AllPapers,\r\n        AllTask: state.staticDetailsReducer.AllTask,\r\n        AllContact: state.staticDetailsReducer.AllContact\r\n    };\r\n}\r\nexport default connect(mapStateToProps)(withStyles(useStyles)(Information));\r\n","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\components\\Chart2.js",[],"C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\staticStore.js",[],"C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\actions\\staticAction.js",[],"C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\middleware\\crudMiddleware.js",["68","69"],"import { actions } from '../actions/staticAction'\r\n\r\n// ---------------A function that extracts the jwt from the cookies----------------\r\nexport const getCookie = (c_name) => {\r\n  if (document.cookie.length > 0) {\r\n    let c_start = document.cookie.indexOf(c_name + '=');\r\n    if (c_start !== -1) {\r\n      c_start = c_start + c_name.length + 1;\r\n      let c_end = document.cookie.indexOf(';', c_start);\r\n      if (c_end === -1) {\r\n        c_end = document.cookie.length;\r\n      }\r\n      return unescape(document.cookie.substring(c_start, c_end));\r\n    }\r\n  }\r\n  return '';\r\n};\r\nexport const getStaticData = ({ dispatch, getState }) => next => action => {\r\n  // with this type client enter to application:INIT_DATA\r\n  if (action.type === 'INIT_DATA') {\r\n    let jwt = getCookie('jwt');\r\n    //  fetch to get sum of projects for user-----------------\r\n    fetch('https://reacthub.dev.leader.codes/api/renana-il/getAllProjectsForUser', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJIZXNJaFlXaVU2Z1A3M1NkMHRXaDJZVzA4ZFkyIiwiZW1haWwiOiJyZW5hbmFAbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjA3NTkxOTI5fQ.U2FQ7I4qBXW9DF-SVJqxKiWgVs5tjSo06pyvmuwzCFU\",\r\n        //    Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        //only sumProject\r\n        let sumProject = data.countProjectsForUser\r\n        //all data for project\r\n        let projectData = data.userProjectsList\r\n\r\n        dispatch(actions.setProjectStatic(sumProject));\r\n        dispatch(actions.setProjectData(projectData));\r\n\r\n      })\r\n    // fetch to get sum tasks for user-------------\r\n    fetch('https://reacthub.dev.leader.codes/api/renana-il/getAllTasksForUser', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJIZXNJaFlXaVU2Z1A3M1NkMHRXaDJZVzA4ZFkyIiwiZW1haWwiOiJyZW5hbmFAbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjA3NTkxOTI5fQ.U2FQ7I4qBXW9DF-SVJqxKiWgVs5tjSo06pyvmuwzCFU\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n        let taskData = data.userTasksList\r\n        let sumTask = (data.countTasksForUser)\r\n\r\n        dispatch(actions.setTaskStatic(sumTask));\r\n        dispatch(actions.setTaskStatic(taskData));\r\n\r\n      })\r\n    //  fetch to get sum of papers for user-----------------\r\n    fetch('https://papers.dev.leader.codes/api/ruth109476@gmail.com/getAllQuote', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJEWWMzVlVtRUhTY3FhWkJ3MzAwbHY4OWZuYTgyIiwiZW1haWwiOiJydXRoMTA5NDc2QGdtYWlsLmNvbSIsImlhdCI6MTYxMTcyNjEzN30.sDgXmAvDj3JirPgU5AksbPVMdtxHVIAU9rgTFAeAluE\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((data) => {\r\n\r\n        // let sumPapers = (data.quotes.length)\r\n        let papersData = data.quotes\r\n        let sumPapers = (data.quotes.length)\r\n        //chart data\r\n        let chartPapers=papersData.dueDate.filter(paper => paper.spl)\r\n\r\n        dispatch(actions.setPaperStatic(sumPapers));\r\n        dispatch(actions.setPaperData(papersData));\r\n        debugger\r\n        // dispatch(actions.setPaperChart(papersData));\r\n\r\n\r\n        console.log(data)\r\n      })\r\n    // fetch to get sum of contacts for user----------------------\r\n    fetch('https://api.dev.leader.codes/blabla101/getContacts/?includesConversations=false', {\r\n      method: 'GET',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJzaW1kc01ycmNKZHBRZ3RhOGtnWHlRQmRERnkyIiwiZW1haWwiOiJjdG9AbGVhZGVyLmNvZGVzIiwiaWF0IjoxNjEwNDM3MDcxfQ.vn3nemrfKrW2TKQqwtkIoyaRZRjS8JBEhTtmIWzdc04\",\r\n        //     Authorization: jwt,\r\n      },\r\n    })\r\n      .then((data) => data.json())\r\n      .then((dataContact) => {\r\n        let sumContact = (dataContact.length)\r\n        let contactData = dataContact\r\n\r\n        dispatch(actions.setContactStatic(sumContact));\r\n        dispatch(actions.setContactData(contactData));\r\n\r\n      })\r\n  }\r\n  return next(action)\r\n}","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\reducers\\staticDetailsReducer.js",["70","71"],"import produce from 'immer';\r\nimport moment from 'moment';\r\nimport { createReducer } from \"./reducerUtils\";\r\nlet dateBeforeYear = moment().subtract(1, 'year').format('MM/DD/YYYY')\r\n\r\nconst initialState = {\r\n    leaderStatic: { sumProjects: 0, sumTasks: 0, sumPapers: 0, sumContacts: 0 },\r\n    dataStatic: [],\r\n    sumStatic: { viewer: 0, contactOptions: 0, submitioms: 0 },\r\n    AllProject: [],\r\n    AllPapers: [],\r\n    AllTask: [],\r\n    AllContact: [],\r\n    chartData: {\r\n        papers: [],\r\n        projects: [],\r\n        tasks: [],\r\n        contacts: []\r\n    }\r\n};\r\n\r\nconst staticData = {\r\n    setPaperChart(state, action) {\r\n        debugger\r\n        for (let i = 0; i < action.payload.length; i++) {\r\n            let data = action.payload.due_date;\r\n            //  let  date1=split(data).\r\n            //    state.chartData.papers[date1]++\r\n            i++;\r\n        }\r\n        state.chartData.papers = action.payload\r\n        debugger\r\n    },\r\n    setSumStatic(state, action) {\r\n        state.AllProject = (action.payload);\r\n    },\r\n    setProjectStatic(state, action) {\r\n        state.leaderStatic.sumProjects = action.payload\r\n    },\r\n    setProjectData(state, action) {\r\n        state.AllProject = action.payload\r\n    },\r\n    setTaskStatic(state, action) {\r\n        state.leaderStatic.sumTasks = action.payload\r\n    },\r\n    setTaskData(state, action) {\r\n        state.AllTask = action.payload\r\n    },\r\n    setPaperStatic(state, action) {\r\n        state.leaderStatic.sumPapers = action.payload\r\n    },\r\n    setPaperData(state, action) {\r\n        state.AllPapers = action.payload\r\n    },\r\n    setContactStatic(state, action) {\r\n        state.leaderStatic.sumContacts = action.payload\r\n    },\r\n    setContactData(state, action) {\r\n        state.AllContact = action.payload\r\n    }\r\n};\r\n\r\nexport default produce((state, action) => createReducer(state, action, staticData), initialState);","C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\Redux\\reducers\\reducerUtils.js",[],["72","73"],"C:\\Users\\User\\Desktop\\Leader\\LeaderStatic\\src\\components\\TryChart.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":6,"column":8,"nodeType":"80","messageId":"81","endLine":6,"endColumn":12},{"ruleId":"78","severity":1,"message":"82","line":7,"column":35,"nodeType":"80","messageId":"81","endLine":7,"endColumn":41},{"ruleId":"78","severity":1,"message":"83","line":7,"column":43,"nodeType":"80","messageId":"81","endLine":7,"endColumn":48},{"ruleId":"78","severity":1,"message":"84","line":7,"column":50,"nodeType":"80","messageId":"81","endLine":7,"endColumn":59},{"ruleId":"78","severity":1,"message":"85","line":1,"column":17,"nodeType":"80","messageId":"81","endLine":1,"endColumn":26},{"ruleId":"86","severity":1,"message":"87","line":43,"column":34,"nodeType":"88","messageId":"89","endLine":43,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":54,"column":34,"nodeType":"88","messageId":"89","endLine":54,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":59,"column":34,"nodeType":"88","messageId":"89","endLine":59,"endColumn":36},{"ruleId":"86","severity":1,"message":"87","line":66,"column":31,"nodeType":"88","messageId":"89","endLine":66,"endColumn":33},{"ruleId":"90","severity":1,"message":"91","line":208,"column":41,"nodeType":"92","endLine":208,"endColumn":88},{"ruleId":"90","severity":1,"message":"91","line":230,"column":41,"nodeType":"92","endLine":230,"endColumn":88},{"ruleId":"90","severity":1,"message":"91","line":253,"column":41,"nodeType":"92","endLine":253,"endColumn":64},{"ruleId":"93","severity":1,"message":"94","line":263,"column":54,"nodeType":"95","endLine":263,"endColumn":78},{"ruleId":"90","severity":1,"message":"91","line":275,"column":41,"nodeType":"92","endLine":275,"endColumn":63},{"ruleId":"78","severity":1,"message":"96","line":21,"column":9,"nodeType":"80","messageId":"81","endLine":21,"endColumn":12},{"ruleId":"78","severity":1,"message":"97","line":76,"column":13,"nodeType":"80","messageId":"81","endLine":76,"endColumn":24},{"ruleId":"78","severity":1,"message":"98","line":4,"column":5,"nodeType":"80","messageId":"81","endLine":4,"endColumn":19},{"ruleId":"78","severity":1,"message":"99","line":26,"column":17,"nodeType":"80","messageId":"81","endLine":26,"endColumn":21},{"ruleId":"74","replacedBy":"100"},{"ruleId":"76","replacedBy":"101"},"no-native-reassign",["102"],"no-negated-in-lhs",["103"],"no-unused-vars","'TryC' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'useParams' is defined but never used.","'Component' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","'jwt' is assigned a value but never used.","'chartPapers' is assigned a value but never used.","'dateBeforeYear' is assigned a value but never used.","'data' is assigned a value but never used.",["102"],["103"],"no-global-assign","no-unsafe-negation"]